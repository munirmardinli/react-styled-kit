{
	"schemaVersion": "2.0",
	"id": 0,
	"name": "react-styled-kit",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "style",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@file",
						"content": [
							{
								"kind": "text",
								"text": "Style package for React components"
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Munir Mardinli <munir@mardinli.de>"
							}
						]
					},
					{
						"tag": "@date",
						"content": [
							{
								"kind": "text",
								"text": "2025-06-20"
							}
						]
					},
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "This package provides styled components and utility functions for a React application.\nIt includes styled versions of Material-UI components, custom components, and helper functions."
							}
						]
					},
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "1.0.0"
							}
						]
					},
					{
						"tag": "@exports",
						"content": [
							{
								"kind": "text",
								"text": "StyledButton, StyledCloseIcon, StyledCalendar, RBCOverlay, drawerWidth, openedMixin,\nclosedMixin, DrawerHeader, AppBar, Drawer, StyledListItemText, StyledListItemIcon,\nStyledListItemButton, StyledMenuItem, Logo, StyledMenuIcon, StyledScrollToTopFab,\nStyledKeyboardArrowUp, StyledDataGrid, StyledGridOverlay, Search, SearchIconWrapper,\nStyledInputBase, SearchSelect, StyledSnackbar, StyledSnackbarAlert, StyledSwitchMode,\nStyledDateInput, StyledTextField, StyledDemoContainer, StyledTooltip, StyledTypography,\nStyledTypographyCaption, StyledTypographySubcaption, TypographyContainer, pxToRem"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 163,
					"name": "AppBar",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled app bar component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A customized app bar with position-aware styling"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 77,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L77"
						}
					],
					"target": 27
				},
				{
					"id": 164,
					"name": "closedMixin",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Mixin for closed drawer state"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@function",
								"content": [
									{
										"kind": "text",
										"text": "closedMixin"
									}
								]
							},
							{
								"tag": "@param",
								"name": "theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Style object for closed drawer"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 86,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L86"
						}
					],
					"target": 22
				},
				{
					"id": 165,
					"name": "Drawer",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled drawer component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A customized drawer with responsive behavior"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 94,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L94"
						}
					],
					"target": 32
				},
				{
					"id": 166,
					"name": "DrawerHeader",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled drawer header component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The header section of the drawer"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 102,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L102"
						}
					],
					"target": 25
				},
				{
					"id": 162,
					"name": "drawerWidth",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Width of the drawer component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@constant",
								"content": [
									{
										"kind": "text",
										"text": "drawerWidth"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The width of the drawer in pixels when open"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 69,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L69"
						}
					],
					"target": 18
				},
				{
					"id": 173,
					"name": "Logo",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Application logo component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The application logo with responsive sizing"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 159,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L159"
						}
					],
					"target": 63
				},
				{
					"id": 167,
					"name": "openedMixin",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Mixin for opened drawer state"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@function",
								"content": [
									{
										"kind": "text",
										"text": "openedMixin"
									}
								]
							},
							{
								"tag": "@param",
								"name": "theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Style object for opened drawer"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 111,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L111"
						}
					],
					"target": 19
				},
				{
					"id": 157,
					"name": "pxToRem",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Utility function to convert pixels to rem units"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@function",
								"content": [
									{
										"kind": "text",
										"text": "pxToRem"
									}
								]
							},
							{
								"tag": "@param",
								"name": "value",
								"content": [
									{
										"kind": "text",
										"text": "The pixel value to convert"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The value in rem units"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nconst fontSize = pxToRem(16); // returns '1rem'\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 29,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L29"
						}
					],
					"target": 78
				},
				{
					"id": 161,
					"name": "RBCOverlay",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Overlay component for RBC (React Big Calendar)"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "An overlay component for calendar events"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 61,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L61"
						}
					],
					"target": 15
				},
				{
					"id": 179,
					"name": "Search",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized search input container"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 207,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L207"
						}
					],
					"target": 92
				},
				{
					"id": 180,
					"name": "SearchIconWrapper",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search icon wrapper component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Wrapper for search icon with proper positioning"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 215,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L215"
						}
					],
					"target": 94
				},
				{
					"id": 178,
					"name": "SearchSelect",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search select component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized select input for search functionality"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 199,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L199"
						}
					],
					"target": 99
				},
				{
					"id": 177,
					"name": "StykedKeyboardArrowUp",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled keyboard arrow up icon"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized keyboard arrow up icon"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 191,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L191"
						}
					],
					"target": 87
				},
				{
					"id": 158,
					"name": "StyledButton",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled button component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A customized button component with consistent styling"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 37,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L37"
						}
					],
					"target": 3
				},
				{
					"id": 160,
					"name": "StyledCalendar",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled calendar component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A customized calendar component with consistent styling"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 53,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L53"
						}
					],
					"target": 12
				},
				{
					"id": 159,
					"name": "StyledCloseIcon",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled close icon component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A customized close icon with consistent styling"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 45,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L45"
						}
					],
					"target": 7
				},
				{
					"id": 174,
					"name": "StyledDataGrid",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled data grid component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized data grid with consistent styling"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 167,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L167"
						}
					],
					"target": 72
				},
				{
					"id": 185,
					"name": "StyledDateInput",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled date input component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized date input field"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 255,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L255"
						}
					],
					"target": 121
				},
				{
					"id": 186,
					"name": "StyledDemoContainer",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled demo container component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Container for demo components with consistent styling"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 263,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L263"
						}
					],
					"target": 124
				},
				{
					"id": 175,
					"name": "StyledGridOverlay",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled grid overlay component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized overlay for the data grid"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 175,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L175"
						}
					],
					"target": 75
				},
				{
					"id": 181,
					"name": "StyledInputBase",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled base input component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized base input with consistent styling"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 223,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L223"
						}
					],
					"target": 96
				},
				{
					"id": 168,
					"name": "StyledListItemButton",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled list item button component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized button for list items"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 119,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L119"
						}
					],
					"target": 49
				},
				{
					"id": 169,
					"name": "StyledListItemIcon",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled list item icon component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized icon for list items"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 127,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L127"
						}
					],
					"target": 42
				},
				{
					"id": 170,
					"name": "StyledListItemText",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled list item text component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized text for list items"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 135,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L135"
						}
					],
					"target": 35
				},
				{
					"id": 172,
					"name": "StyledMenuIcon",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled menu icon component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized menu icon with consistent styling"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 151,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L151"
						}
					],
					"target": 68
				},
				{
					"id": 171,
					"name": "StyledMenuItem",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled menu item component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized menu item with consistent styling"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 143,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L143"
						}
					],
					"target": 56
				},
				{
					"id": 176,
					"name": "StyledScrollToTopFab",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled scroll-to-top FAB component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized floating action button for scrolling to top"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 183,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L183"
						}
					],
					"target": 83
				},
				{
					"id": 182,
					"name": "StyledSnackbar",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled snackbar component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized snackbar notification"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 231,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L231"
						}
					],
					"target": 103
				},
				{
					"id": 183,
					"name": "StyledSnackbarAlert",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled snackbar alert component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized alert for snackbar notifications"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 239,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L239"
						}
					],
					"target": 106
				},
				{
					"id": 184,
					"name": "StyledSwitchMode",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled mode switch component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized switch for toggling between light/dark mode"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 247,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L247"
						}
					],
					"target": 110
				},
				{
					"id": 187,
					"name": "StyledTextField",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled text field component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized text input field"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 271,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L271"
						}
					],
					"target": 114
				},
				{
					"id": 188,
					"name": "StyledTooltip",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled tooltip component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized tooltip with consistent styling"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 279,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L279"
						}
					],
					"target": 131
				},
				{
					"id": 190,
					"name": "StyledTypography",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled typography component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Base typography component with consistent styling"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 295,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L295"
						}
					],
					"target": 135
				},
				{
					"id": 189,
					"name": "StyledTypographyCaption",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled caption typography component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Caption typography variant with custom styling"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 287,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L287"
						}
					],
					"target": 141
				},
				{
					"id": 192,
					"name": "StyledTypographySubcaption",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20\nStyled subcaption typography component"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Smaller caption typography variant with custom styling"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 311,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L311"
						}
					],
					"target": 148
				},
				{
					"id": 191,
					"name": "TypographyContainer",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Typography container component"
							}
						],
						"blockTags": [
							{
								"tag": "@author",
								"content": [
									{
										"kind": "text",
										"text": "Munir Mardinli <munir@mardinli.de>"
									}
								]
							},
							{
								"tag": "@date",
								"content": [
									{
										"kind": "text",
										"text": "2025-06-20"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Container for typography components with proper spacing"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 303,
							"character": 9,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L303"
						}
					],
					"target": 155
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						163,
						165,
						166,
						162,
						173,
						161,
						179,
						180,
						178,
						177,
						158,
						160,
						159,
						174,
						185,
						186,
						175,
						181,
						168,
						169,
						170,
						172,
						171,
						176,
						182,
						183,
						184,
						187,
						188,
						190,
						189,
						192,
						191
					]
				},
				{
					"title": "Functions",
					"children": [
						164,
						167,
						157
					]
				}
			],
			"sources": [
				{
					"fileName": "src/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/index.ts#L1"
				}
			]
		},
		{
			"id": 2,
			"name": "style/button",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@file",
						"content": [
							{
								"kind": "text",
								"text": "Styled button components"
							}
						]
					},
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Customized Material-UI button components with enhanced styling and hover effects"
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Munir Mardinli <munir@mardinli.de>"
							}
						]
					},
					{
						"tag": "@date",
						"content": [
							{
								"kind": "text",
								"text": "2025-06-20"
							}
						]
					},
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "1.0.0"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 3,
					"name": "StyledButton",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled button component with dynamic theming"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledButton"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A highly customizable button component that adapts to theme and variant.\nFeatures include:\n- Dynamic background and text colors based on theme mode and variant\n- Smooth hover and active state transitions\n- Responsive shadow effects\n- Consistent border radius"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI Button props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.variant",
								"content": [
									{
										"kind": "text",
										"text": "Button variant ('contained', 'outlined', or 'text')"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<StyledButton variant=\"contained\">Submit</StyledButton>\n<StyledButton variant=\"outlined\">Cancel</StyledButton>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/button.ts",
							"line": 28,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/button.ts#L28"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "Button/Button.d.ts",
											"qualifiedName": "ButtonOwnProps"
										},
										"name": "ButtonOwnProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "ButtonBase/ButtonBase.d.ts",
													"qualifiedName": "ButtonBaseOwnProps"
												},
												"name": "ButtonBaseOwnProps",
												"package": "@mui/material"
											},
											{
												"type": "literal",
												"value": "classes"
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "OverridableComponent/index.d.ts",
											"qualifiedName": "CommonProps"
										},
										"name": "CommonProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.DetailedHTMLProps"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "@types/react",
															"packagePath": "index.d.ts",
															"qualifiedName": "React.ButtonHTMLAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLButtonElement"
																},
																"name": "HTMLButtonElement",
																"package": "typescript"
															}
														],
														"name": "ButtonHTMLAttributes",
														"package": "@types/react",
														"qualifiedName": "React.ButtonHTMLAttributes"
													},
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLButtonElement"
														},
														"name": "HTMLButtonElement",
														"package": "typescript"
													}
												],
												"name": "DetailedHTMLProps",
												"package": "@types/react",
												"qualifiedName": "React.DetailedHTMLProps"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "className"
													},
													{
														"type": "literal",
														"value": "style"
													},
													{
														"type": "literal",
														"value": "classes"
													},
													{
														"type": "literal",
														"value": "action"
													},
													{
														"type": "literal",
														"value": "centerRipple"
													},
													{
														"type": "literal",
														"value": "children"
													},
													{
														"type": "literal",
														"value": "disabled"
													},
													{
														"type": "literal",
														"value": "disableRipple"
													},
													{
														"type": "literal",
														"value": "disableTouchRipple"
													},
													{
														"type": "literal",
														"value": "focusRipple"
													},
													{
														"type": "literal",
														"value": "focusVisibleClassName"
													},
													{
														"type": "literal",
														"value": "LinkComponent"
													},
													{
														"type": "literal",
														"value": "onFocusVisible"
													},
													{
														"type": "literal",
														"value": "sx"
													},
													{
														"type": "literal",
														"value": "tabIndex"
													},
													{
														"type": "literal",
														"value": "TouchRippleProps"
													},
													{
														"type": "literal",
														"value": "touchRippleRef"
													},
													{
														"type": "literal",
														"value": "href"
													},
													{
														"type": "literal",
														"value": "color"
													},
													{
														"type": "literal",
														"value": "disableElevation"
													},
													{
														"type": "literal",
														"value": "disableFocusRipple"
													},
													{
														"type": "literal",
														"value": "endIcon"
													},
													{
														"type": "literal",
														"value": "fullWidth"
													},
													{
														"type": "literal",
														"value": "loading"
													},
													{
														"type": "literal",
														"value": "loadingIndicator"
													},
													{
														"type": "literal",
														"value": "loadingPosition"
													},
													{
														"type": "literal",
														"value": "size"
													},
													{
														"type": "literal",
														"value": "startIcon"
													},
													{
														"type": "literal",
														"value": "variant"
													}
												]
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/@mui/material/Button/Button.d.ts",
													"line": 127,
													"character": 203
												}
											]
										}
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 5,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 6,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 7,
					"name": "StyledCloseIcon",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled close icon button component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledCloseIcon"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A specialized button component designed for close/dismiss actions.\nFeatures include:\n- Consistent info color scheme\n- Smooth hover animations\n- Fixed white text color\n- Shadow effects"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI Button props"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<StyledCloseIcon onClick={handleClose}>\n  <CloseIcon />\n</StyledCloseIcon>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/button.ts",
							"line": 95,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/button.ts#L95"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "Button/Button.d.ts",
											"qualifiedName": "ButtonOwnProps"
										},
										"name": "ButtonOwnProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "ButtonBase/ButtonBase.d.ts",
													"qualifiedName": "ButtonBaseOwnProps"
												},
												"name": "ButtonBaseOwnProps",
												"package": "@mui/material"
											},
											{
												"type": "literal",
												"value": "classes"
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "OverridableComponent/index.d.ts",
											"qualifiedName": "CommonProps"
										},
										"name": "CommonProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.DetailedHTMLProps"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "@types/react",
															"packagePath": "index.d.ts",
															"qualifiedName": "React.ButtonHTMLAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLButtonElement"
																},
																"name": "HTMLButtonElement",
																"package": "typescript"
															}
														],
														"name": "ButtonHTMLAttributes",
														"package": "@types/react",
														"qualifiedName": "React.ButtonHTMLAttributes"
													},
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLButtonElement"
														},
														"name": "HTMLButtonElement",
														"package": "typescript"
													}
												],
												"name": "DetailedHTMLProps",
												"package": "@types/react",
												"qualifiedName": "React.DetailedHTMLProps"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "className"
													},
													{
														"type": "literal",
														"value": "style"
													},
													{
														"type": "literal",
														"value": "classes"
													},
													{
														"type": "literal",
														"value": "action"
													},
													{
														"type": "literal",
														"value": "centerRipple"
													},
													{
														"type": "literal",
														"value": "children"
													},
													{
														"type": "literal",
														"value": "disabled"
													},
													{
														"type": "literal",
														"value": "disableRipple"
													},
													{
														"type": "literal",
														"value": "disableTouchRipple"
													},
													{
														"type": "literal",
														"value": "focusRipple"
													},
													{
														"type": "literal",
														"value": "focusVisibleClassName"
													},
													{
														"type": "literal",
														"value": "LinkComponent"
													},
													{
														"type": "literal",
														"value": "onFocusVisible"
													},
													{
														"type": "literal",
														"value": "sx"
													},
													{
														"type": "literal",
														"value": "tabIndex"
													},
													{
														"type": "literal",
														"value": "TouchRippleProps"
													},
													{
														"type": "literal",
														"value": "touchRippleRef"
													},
													{
														"type": "literal",
														"value": "href"
													},
													{
														"type": "literal",
														"value": "color"
													},
													{
														"type": "literal",
														"value": "disableElevation"
													},
													{
														"type": "literal",
														"value": "disableFocusRipple"
													},
													{
														"type": "literal",
														"value": "endIcon"
													},
													{
														"type": "literal",
														"value": "fullWidth"
													},
													{
														"type": "literal",
														"value": "loading"
													},
													{
														"type": "literal",
														"value": "loadingIndicator"
													},
													{
														"type": "literal",
														"value": "loadingPosition"
													},
													{
														"type": "literal",
														"value": "size"
													},
													{
														"type": "literal",
														"value": "startIcon"
													},
													{
														"type": "literal",
														"value": "variant"
													}
												]
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 8,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/@mui/material/Button/Button.d.ts",
													"line": 127,
													"character": 203
												}
											]
										}
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 9,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 10,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						3,
						7
					]
				}
			],
			"sources": [
				{
					"fileName": "src/style/button.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/button.ts#L1"
				}
			]
		},
		{
			"id": 11,
			"name": "style/calendar",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@file",
						"content": [
							{
								"kind": "text",
								"text": "Styled calendar components"
							}
						]
					},
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Customized React Big Calendar components with enhanced styling, drag-and-drop functionality,\nand responsive design. Includes both the main calendar and overlay components."
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Munir Mardinli <munir@mardinli.de>"
							}
						]
					},
					{
						"tag": "@date",
						"content": [
							{
								"kind": "text",
								"text": "2025-06-20"
							}
						]
					},
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "1.0.0"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 15,
					"name": "RBCOverlay",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Calendar overlay component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "RBCOverlay"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A styled overlay component for calendar events with:\n- Absolute positioning\n- Theme-aware colors\n- Custom shadow effects\n- Responsive typography"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "React props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<RBCOverlay>\n  <div className=\"rbc-overlay-header\">Event Details</div>\n  <div className=\"rbc-event-content\">Meeting with Team</div>\n</RBCOverlay>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/calendar.ts",
							"line": 409,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/calendar.ts#L409"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@mui/system",
									"packagePath": "createStyled/createStyled.d.ts",
									"qualifiedName": "MUIStyledCommonProps"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "styles/createThemeNoVars.d.ts",
											"qualifiedName": "Theme"
										},
										"name": "Theme",
										"package": "@mui/material"
									}
								],
								"name": "MUIStyledCommonProps",
								"package": "@mui/system"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.DetailedHTMLProps"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@types/react",
											"packagePath": "index.d.ts",
											"qualifiedName": "React.HTMLAttributes"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "HTMLDivElement"
												},
												"name": "HTMLDivElement",
												"package": "typescript"
											}
										],
										"name": "HTMLAttributes",
										"package": "@types/react",
										"qualifiedName": "React.HTMLAttributes"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "HTMLDivElement"
										},
										"name": "HTMLDivElement",
										"package": "typescript"
									}
								],
								"name": "DetailedHTMLProps",
								"package": "@types/react",
								"qualifiedName": "React.DetailedHTMLProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 16,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 12,
					"name": "StyledCalendar",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled drag-and-drop calendar component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledCalendar"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A fully customized calendar component with:\n- Responsive design for all screen sizes\n- Smooth transitions and animations\n- Custom toolbars and headers\n- Theme-aware color schemes\n- Enhanced event styling"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "React Big Calendar props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<StyledCalendar\n  events={events}\n  defaultView=\"week\"\n  onSelectEvent={handleEventSelect}\n/>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/calendar.ts",
							"line": 88,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/calendar.ts#L88"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@types/react-big-calendar",
											"packagePath": "index.d.ts",
											"qualifiedName": "CalendarProps"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "object"
											},
											{
												"type": "intrinsic",
												"name": "object"
											}
										],
										"name": "CalendarProps",
										"package": "@types/react-big-calendar"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@types/react-big-calendar",
											"packagePath": "index.d.ts",
											"qualifiedName": "CalendarProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react-big-calendar",
													"packagePath": "index.d.ts",
													"qualifiedName": "Event"
												},
												"name": "Event",
												"package": "@types/react-big-calendar"
											},
											{
												"type": "intrinsic",
												"name": "object"
											}
										],
										"name": "CalendarProps",
										"package": "@types/react-big-calendar"
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 13,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 14,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "node_modules/@mui/styled-engine/index.d.ts",
											"line": 117,
											"character": 215
										}
									]
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						15,
						12
					]
				}
			],
			"sources": [
				{
					"fileName": "src/style/calendar.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/calendar.ts#L1"
				}
			]
		},
		{
			"id": 17,
			"name": "style/drawer",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@file",
						"content": [
							{
								"kind": "text",
								"text": "Styled drawer navigation components"
							}
						]
					},
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Customized Material-UI drawer components with responsive behavior,\ntheme-aware styling, and navigation features. Includes drawer, app bar, menu items,\nand related components."
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Munir Mardinli <munir@mardinli.de>"
							}
						]
					},
					{
						"tag": "@date",
						"content": [
							{
								"kind": "text",
								"text": "2025-06-20"
							}
						]
					},
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "1.0.0"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 27,
					"name": "AppBar",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled app bar component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "AppBar"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized app bar that responds to drawer state"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/drawer.ts",
							"line": 89,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L89"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "AppBar/AppBar.d.ts",
											"qualifiedName": "AppBarOwnProps"
										},
										"name": "AppBarOwnProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "Paper/Paper.d.ts",
													"qualifiedName": "PaperOwnProps"
												},
												"name": "PaperOwnProps",
												"package": "@mui/material"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "classes"
													},
													{
														"type": "literal",
														"value": "color"
													},
													{
														"type": "literal",
														"value": "position"
													}
												]
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "OverridableComponent/index.d.ts",
											"qualifiedName": "CommonProps"
										},
										"name": "CommonProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.DetailedHTMLProps"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "@types/react",
															"packagePath": "index.d.ts",
															"qualifiedName": "React.HTMLAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLElement"
																},
																"name": "HTMLElement",
																"package": "typescript"
															}
														],
														"name": "HTMLAttributes",
														"package": "@types/react",
														"qualifiedName": "React.HTMLAttributes"
													},
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLElement"
														},
														"name": "HTMLElement",
														"package": "typescript"
													}
												],
												"name": "DetailedHTMLProps",
												"package": "@types/react",
												"qualifiedName": "React.DetailedHTMLProps"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "className"
													},
													{
														"type": "literal",
														"value": "style"
													},
													{
														"type": "literal",
														"value": "classes"
													},
													{
														"type": "literal",
														"value": "children"
													},
													{
														"type": "literal",
														"value": "sx"
													},
													{
														"type": "literal",
														"value": "color"
													},
													{
														"type": "literal",
														"value": "position"
													},
													{
														"type": "literal",
														"value": "variant"
													},
													{
														"type": "literal",
														"value": "square"
													},
													{
														"type": "literal",
														"value": "elevation"
													},
													{
														"type": "literal",
														"value": "enableColorOnDark"
													}
												]
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 28,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 29,
													"name": "open",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/style/drawer.ts",
															"line": 91,
															"character": 5,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L91"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														29
													]
												}
											],
											"sources": [
												{
													"fileName": "src/style/drawer.ts",
													"line": 91,
													"character": 3,
													"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L91"
												}
											]
										}
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 30,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 31,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 32,
					"name": "Drawer",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled drawer component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "Drawer"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Responsive drawer that toggles between open and closed states"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/drawer.ts",
							"line": 120,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L120"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "Drawer/Drawer.d.ts",
											"qualifiedName": "DrawerProps"
										},
										"name": "DrawerProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 33,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 34,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 25,
					"name": "DrawerHeader",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled drawer header component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "DrawerHeader"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The header section of the drawer with proper alignment and spacing"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "React props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/drawer.ts",
							"line": 72,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L72"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@mui/system",
									"packagePath": "createStyled/createStyled.d.ts",
									"qualifiedName": "MUIStyledCommonProps"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "styles/createThemeNoVars.d.ts",
											"qualifiedName": "Theme"
										},
										"name": "Theme",
										"package": "@mui/material"
									}
								],
								"name": "MUIStyledCommonProps",
								"package": "@mui/system"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.DetailedHTMLProps"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@types/react",
											"packagePath": "index.d.ts",
											"qualifiedName": "React.HTMLAttributes"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "HTMLDivElement"
												},
												"name": "HTMLDivElement",
												"package": "typescript"
											}
										],
										"name": "HTMLAttributes",
										"package": "@types/react",
										"qualifiedName": "React.HTMLAttributes"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "HTMLDivElement"
										},
										"name": "HTMLDivElement",
										"package": "typescript"
									}
								],
								"name": "DetailedHTMLProps",
								"package": "@types/react",
								"qualifiedName": "React.DetailedHTMLProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 26,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 18,
					"name": "drawerWidth",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Width of the drawer when fully opened"
							}
						],
						"blockTags": [
							{
								"tag": "@constant",
								"content": [
									{
										"kind": "text",
										"text": "drawerWidth"
									}
								]
							},
							{
								"tag": "@default",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n240\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/drawer.ts",
							"line": 30,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L30"
						}
					],
					"type": {
						"type": "literal",
						"value": 240
					},
					"defaultValue": "240"
				},
				{
					"id": 63,
					"name": "Logo",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Application logo component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "Logo"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Responsive application logo with hover effects"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/drawer.ts",
							"line": 255,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L255"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.DetailedHTMLProps"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "@types/react",
															"packagePath": "index.d.ts",
															"qualifiedName": "React.ImgHTMLAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLImageElement"
																},
																"name": "HTMLImageElement",
																"package": "typescript"
															}
														],
														"name": "ImgHTMLAttributes",
														"package": "@types/react",
														"qualifiedName": "React.ImgHTMLAttributes"
													},
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLImageElement"
														},
														"name": "HTMLImageElement",
														"package": "typescript"
													}
												],
												"name": "DetailedHTMLProps",
												"package": "@types/react",
												"qualifiedName": "React.DetailedHTMLProps"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ref"
													},
													{
														"type": "literal",
														"value": "height"
													},
													{
														"type": "literal",
														"value": "width"
													},
													{
														"type": "literal",
														"value": "loading"
													},
													{
														"type": "literal",
														"value": "alt"
													},
													{
														"type": "literal",
														"value": "src"
													},
													{
														"type": "literal",
														"value": "srcSet"
													}
												]
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 64,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/next/dist/client/image-component.d.ts",
													"line": 11,
													"character": 220
												}
											]
										}
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@types/react",
											"packagePath": "index.d.ts",
											"qualifiedName": "React.RefAttributes"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLImageElement"
														},
														"name": "HTMLImageElement",
														"package": "typescript"
													}
												]
											}
										],
										"name": "RefAttributes",
										"package": "@types/react",
										"qualifiedName": "React.RefAttributes"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 65,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/next/dist/shared/lib/get-img-props.d.ts",
													"line": 15,
													"character": 129
												}
											]
										}
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 66,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 67,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 49,
					"name": "StyledListItemButton",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled list item button component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledListItemButton"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Interactive button for navigation items with path-based highlighting"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/drawer.ts",
							"line": 198,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L198"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "ListItemButton/ListItemButton.d.ts",
											"qualifiedName": "ListItemButtonOwnProps"
										},
										"name": "ListItemButtonOwnProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "ButtonBase/ButtonBase.d.ts",
													"qualifiedName": "ButtonBaseOwnProps"
												},
												"name": "ButtonBaseOwnProps",
												"package": "@mui/material"
											},
											{
												"type": "literal",
												"value": "classes"
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "OverridableComponent/index.d.ts",
											"qualifiedName": "CommonProps"
										},
										"name": "CommonProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.DetailedHTMLProps"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "@types/react",
															"packagePath": "index.d.ts",
															"qualifiedName": "React.HTMLAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLDivElement"
																},
																"name": "HTMLDivElement",
																"package": "typescript"
															}
														],
														"name": "HTMLAttributes",
														"package": "@types/react",
														"qualifiedName": "React.HTMLAttributes"
													},
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLDivElement"
														},
														"name": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "DetailedHTMLProps",
												"package": "@types/react",
												"qualifiedName": "React.DetailedHTMLProps"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "className"
													},
													{
														"type": "literal",
														"value": "style"
													},
													{
														"type": "literal",
														"value": "classes"
													},
													{
														"type": "literal",
														"value": "action"
													},
													{
														"type": "literal",
														"value": "centerRipple"
													},
													{
														"type": "literal",
														"value": "children"
													},
													{
														"type": "literal",
														"value": "disabled"
													},
													{
														"type": "literal",
														"value": "disableRipple"
													},
													{
														"type": "literal",
														"value": "disableTouchRipple"
													},
													{
														"type": "literal",
														"value": "focusRipple"
													},
													{
														"type": "literal",
														"value": "focusVisibleClassName"
													},
													{
														"type": "literal",
														"value": "LinkComponent"
													},
													{
														"type": "literal",
														"value": "onFocusVisible"
													},
													{
														"type": "literal",
														"value": "sx"
													},
													{
														"type": "literal",
														"value": "tabIndex"
													},
													{
														"type": "literal",
														"value": "TouchRippleProps"
													},
													{
														"type": "literal",
														"value": "touchRippleRef"
													},
													{
														"type": "literal",
														"value": "autoFocus"
													},
													{
														"type": "literal",
														"value": "alignItems"
													},
													{
														"type": "literal",
														"value": "selected"
													},
													{
														"type": "literal",
														"value": "dense"
													},
													{
														"type": "literal",
														"value": "disableGutters"
													},
													{
														"type": "literal",
														"value": "divider"
													}
												]
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 50,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 51,
													"name": "open",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/style/drawer.ts",
															"line": 199,
															"character": 2,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L199"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 53,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/style/drawer.ts",
															"line": 201,
															"character": 2,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L201"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 52,
													"name": "pathname",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/style/drawer.ts",
															"line": 200,
															"character": 2,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L200"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														51,
														53,
														52
													]
												}
											],
											"sources": [
												{
													"fileName": "src/style/drawer.ts",
													"line": 198,
													"character": 59,
													"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L198"
												}
											]
										}
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 54,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 55,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 42,
					"name": "StyledListItemIcon",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled list item icon component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledListItemIcon"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized icon for navigation items with path-based coloring"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/drawer.ts",
							"line": 169,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L169"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "ListItemIcon/ListItemIcon.d.ts",
											"qualifiedName": "ListItemIconProps"
										},
										"name": "ListItemIconProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 43,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 44,
													"name": "open",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/style/drawer.ts",
															"line": 170,
															"character": 2,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L170"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 46,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/style/drawer.ts",
															"line": 172,
															"character": 2,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L172"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 45,
													"name": "pathname",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/style/drawer.ts",
															"line": 171,
															"character": 2,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L171"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														44,
														46,
														45
													]
												}
											],
											"sources": [
												{
													"fileName": "src/style/drawer.ts",
													"line": 169,
													"character": 55,
													"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L169"
												}
											]
										}
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 47,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 48,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 35,
					"name": "StyledListItemText",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled list item text component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledListItemText"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized text for navigation items with path-based highlighting"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/drawer.ts",
							"line": 146,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L146"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "ListItemText/ListItemText.d.ts",
											"qualifiedName": "ListItemTextProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.ElementType"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"target": {
																"packageName": "@types/react",
																"packagePath": "index.d.ts",
																"qualifiedName": "React.JSX.IntrinsicElements"
															},
															"name": "IntrinsicElements",
															"package": "@types/react",
															"qualifiedName": "React.JSX.IntrinsicElements"
														}
													}
												],
												"name": "ElementType",
												"package": "@types/react",
												"qualifiedName": "React.ElementType"
											},
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.ElementType"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"target": {
																"packageName": "@types/react",
																"packagePath": "index.d.ts",
																"qualifiedName": "React.JSX.IntrinsicElements"
															},
															"name": "IntrinsicElements",
															"package": "@types/react",
															"qualifiedName": "React.JSX.IntrinsicElements"
														}
													}
												],
												"name": "ElementType",
												"package": "@types/react",
												"qualifiedName": "React.ElementType"
											}
										],
										"name": "ListItemTextProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 36,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 37,
													"name": "open",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/style/drawer.ts",
															"line": 147,
															"character": 2,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L147"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 39,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/style/drawer.ts",
															"line": 149,
															"character": 2,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L149"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 38,
													"name": "pathname",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/style/drawer.ts",
															"line": 148,
															"character": 2,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L148"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														37,
														39,
														38
													]
												}
											],
											"sources": [
												{
													"fileName": "src/style/drawer.ts",
													"line": 146,
													"character": 55,
													"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L146"
												}
											]
										}
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 40,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 41,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 68,
					"name": "StyledMenuIcon",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled menu icon component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledMenuIcon"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized menu toggle icon with hover effects"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/drawer.ts",
							"line": 287,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L287"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "SvgIcon/SvgIcon.d.ts",
											"qualifiedName": "SvgIconOwnProps"
										},
										"name": "SvgIconOwnProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "OverridableComponent/index.d.ts",
											"qualifiedName": "CommonProps"
										},
										"name": "CommonProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.SVGProps"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "SVGSVGElement"
														},
														"name": "SVGSVGElement",
														"package": "typescript"
													}
												],
												"name": "SVGProps",
												"package": "@types/react",
												"qualifiedName": "React.SVGProps"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "className"
													},
													{
														"type": "literal",
														"value": "style"
													},
													{
														"type": "literal",
														"value": "classes"
													},
													{
														"type": "literal",
														"value": "children"
													},
													{
														"type": "literal",
														"value": "sx"
													},
													{
														"type": "literal",
														"value": "color"
													},
													{
														"type": "literal",
														"value": "fontSize"
													},
													{
														"type": "literal",
														"value": "shapeRendering"
													},
													{
														"type": "literal",
														"value": "htmlColor"
													},
													{
														"type": "literal",
														"value": "inheritViewBox"
													},
													{
														"type": "literal",
														"value": "titleAccess"
													},
													{
														"type": "literal",
														"value": "viewBox"
													}
												]
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 69,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 70,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 56,
					"name": "StyledMenuItem",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled menu item component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledMenuItem"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized menu item with language selection support"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/drawer.ts",
							"line": 225,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L225"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "MenuItem/MenuItem.d.ts",
											"qualifiedName": "MenuItemOwnProps"
										},
										"name": "MenuItemOwnProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "ButtonBase/ButtonBase.d.ts",
													"qualifiedName": "ButtonBaseOwnProps"
												},
												"name": "ButtonBaseOwnProps",
												"package": "@mui/material"
											},
											{
												"type": "literal",
												"value": "classes"
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "OverridableComponent/index.d.ts",
											"qualifiedName": "CommonProps"
										},
										"name": "CommonProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.DetailedHTMLProps"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "@types/react",
															"packagePath": "index.d.ts",
															"qualifiedName": "React.LiHTMLAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLLIElement"
																},
																"name": "HTMLLIElement",
																"package": "typescript"
															}
														],
														"name": "LiHTMLAttributes",
														"package": "@types/react",
														"qualifiedName": "React.LiHTMLAttributes"
													},
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLLIElement"
														},
														"name": "HTMLLIElement",
														"package": "typescript"
													}
												],
												"name": "DetailedHTMLProps",
												"package": "@types/react",
												"qualifiedName": "React.DetailedHTMLProps"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "className"
													},
													{
														"type": "literal",
														"value": "style"
													},
													{
														"type": "literal",
														"value": "classes"
													},
													{
														"type": "literal",
														"value": "action"
													},
													{
														"type": "literal",
														"value": "centerRipple"
													},
													{
														"type": "literal",
														"value": "children"
													},
													{
														"type": "literal",
														"value": "disabled"
													},
													{
														"type": "literal",
														"value": "disableRipple"
													},
													{
														"type": "literal",
														"value": "disableTouchRipple"
													},
													{
														"type": "literal",
														"value": "focusRipple"
													},
													{
														"type": "literal",
														"value": "focusVisibleClassName"
													},
													{
														"type": "literal",
														"value": "LinkComponent"
													},
													{
														"type": "literal",
														"value": "onFocusVisible"
													},
													{
														"type": "literal",
														"value": "sx"
													},
													{
														"type": "literal",
														"value": "tabIndex"
													},
													{
														"type": "literal",
														"value": "TouchRippleProps"
													},
													{
														"type": "literal",
														"value": "touchRippleRef"
													},
													{
														"type": "literal",
														"value": "autoFocus"
													},
													{
														"type": "literal",
														"value": "selected"
													},
													{
														"type": "literal",
														"value": "dense"
													},
													{
														"type": "literal",
														"value": "disableGutters"
													},
													{
														"type": "literal",
														"value": "divider"
													}
												]
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 57,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/@mui/material/MenuItem/MenuItem.d.ts",
													"line": 66,
													"character": 209
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 58,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 59,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/style/drawer.ts",
															"line": 229,
															"character": 4,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L229"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60,
													"name": "languageSelected",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/style/drawer.ts",
															"line": 230,
															"character": 4,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L230"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														59,
														60
													]
												}
											],
											"sources": [
												{
													"fileName": "src/style/drawer.ts",
													"line": 228,
													"character": 18,
													"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L228"
												}
											]
										}
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 61,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 62,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 22,
					"name": "closedMixin",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/style/drawer.ts",
							"line": 53,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L53"
						}
					],
					"signatures": [
						{
							"id": 23,
							"name": "closedMixin",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mixin for closed drawer state styles"
									}
								],
								"blockTags": [
									{
										"tag": "@function",
										"content": [
											{
												"kind": "text",
												"text": "closedMixin"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Style object for closed drawer"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/style/drawer.ts",
									"line": 53,
									"character": 27,
									"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L53"
								}
							],
							"parameters": [
								{
									"id": 24,
									"name": "theme",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Material-UI theme object"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "styles/createThemeNoVars.d.ts",
											"qualifiedName": "Theme"
										},
										"name": "Theme",
										"package": "@mui/material"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@mui/styled-engine",
									"packagePath": "index.d.ts",
									"qualifiedName": "CSSObject"
								},
								"name": "CSSObject",
								"package": "@mui/styled-engine"
							}
						}
					]
				},
				{
					"id": 19,
					"name": "openedMixin",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/style/drawer.ts",
							"line": 38,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L38"
						}
					],
					"signatures": [
						{
							"id": 20,
							"name": "openedMixin",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mixin for opened drawer state styles"
									}
								],
								"blockTags": [
									{
										"tag": "@function",
										"content": [
											{
												"kind": "text",
												"text": "openedMixin"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Style object for opened drawer"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/style/drawer.ts",
									"line": 38,
									"character": 27,
									"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L38"
								}
							],
							"parameters": [
								{
									"id": 21,
									"name": "theme",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Material-UI theme object"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "styles/createThemeNoVars.d.ts",
											"qualifiedName": "Theme"
										},
										"name": "Theme",
										"package": "@mui/material"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@mui/styled-engine",
									"packagePath": "index.d.ts",
									"qualifiedName": "CSSObject"
								},
								"name": "CSSObject",
								"package": "@mui/styled-engine"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						27,
						32,
						25,
						18,
						63,
						49,
						42,
						35,
						68,
						56
					]
				},
				{
					"title": "Functions",
					"children": [
						22,
						19
					]
				}
			],
			"sources": [
				{
					"fileName": "src/style/drawer.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/drawer.ts#L1"
				}
			]
		},
		{
			"id": 71,
			"name": "style/grid",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@file",
						"content": [
							{
								"kind": "text",
								"text": "Styled DataGrid components"
							}
						]
					},
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Customized MUI DataGridPro components with enhanced styling,\nresponsive behavior, and theme-aware color schemes."
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Munir Mardinli <munir@mardinli.de>"
							}
						]
					},
					{
						"tag": "@date",
						"content": [
							{
								"kind": "text",
								"text": "2025-06-20"
							}
						]
					},
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "1.0.0"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 72,
					"name": "StyledDataGrid",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled DataGridPro component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledDataGrid"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A highly customized DataGridPro component with:\n- Theme-aware color schemes\n- Responsive design for all screen sizes\n- Enhanced hover and focus states\n- Custom header and cell styling\n- Optimized pagination controls"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "DataGridPro properties"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<StyledDataGrid\n  rows={data}\n  columns={columns}\n  pageSize={10}\n  checkboxSelection\n/>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/grid.ts",
							"line": 32,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/grid.ts#L32"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/x-data-grid-pro",
											"packagePath": "models/dataGridProProps.d.ts",
											"qualifiedName": "DataGridProProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/x-data-grid",
													"packagePath": "models/gridRows.d.ts",
													"qualifiedName": "GridValidRowModel"
												},
												"name": "GridValidRowModel",
												"package": "@mui/x-data-grid"
											}
										],
										"name": "DataGridProProps",
										"package": "@mui/x-data-grid-pro"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@types/react",
											"packagePath": "index.d.ts",
											"qualifiedName": "React.RefAttributes"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "HTMLDivElement"
												},
												"name": "HTMLDivElement",
												"package": "typescript"
											}
										],
										"name": "RefAttributes",
										"package": "@types/react",
										"qualifiedName": "React.RefAttributes"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/x-data-grid-pro",
											"packagePath": "models/dataGridProProps.d.ts",
											"qualifiedName": "DataGridProProps"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "DataGridProProps",
										"package": "@mui/x-data-grid-pro"
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 73,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 74,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 75,
					"name": "StyledGridOverlay",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled grid overlay component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledGridOverlay"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Custom overlay for DataGrid states (loading, error, empty)"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "React props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<StyledGridOverlay>\n  <CircularProgress />\n  <Typography>Loading data...</Typography>\n</StyledGridOverlay>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/grid.ts",
							"line": 183,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/grid.ts#L183"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@mui/system",
									"packagePath": "createStyled/createStyled.d.ts",
									"qualifiedName": "MUIStyledCommonProps"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "styles/createThemeNoVars.d.ts",
											"qualifiedName": "Theme"
										},
										"name": "Theme",
										"package": "@mui/material"
									}
								],
								"name": "MUIStyledCommonProps",
								"package": "@mui/system"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.DetailedHTMLProps"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@types/react",
											"packagePath": "index.d.ts",
											"qualifiedName": "React.HTMLAttributes"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "HTMLDivElement"
												},
												"name": "HTMLDivElement",
												"package": "typescript"
											}
										],
										"name": "HTMLAttributes",
										"package": "@types/react",
										"qualifiedName": "React.HTMLAttributes"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "HTMLDivElement"
										},
										"name": "HTMLDivElement",
										"package": "typescript"
									}
								],
								"name": "DetailedHTMLProps",
								"package": "@types/react",
								"qualifiedName": "React.DetailedHTMLProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 76,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						72,
						75
					]
				}
			],
			"sources": [
				{
					"fileName": "src/style/grid.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/grid.ts#L1"
				}
			]
		},
		{
			"id": 77,
			"name": "style/pxToRem",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@file",
						"content": [
							{
								"kind": "text",
								"text": "Utility function for pixel to rem conversion"
							}
						]
					},
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Converts pixel values to rem units for responsive typography and layout"
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Munir Mardinli <munir@mardinli.de>"
							}
						]
					},
					{
						"tag": "@date",
						"content": [
							{
								"kind": "text",
								"text": "2025-06-20"
							}
						]
					},
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "1.0.0"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 78,
					"name": "pxToRem",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/style/pxToRem.ts",
							"line": 35,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/pxToRem.ts#L35"
						}
					],
					"signatures": [
						{
							"id": 79,
							"name": "pxToRem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts pixel values to rem units"
									}
								],
								"blockTags": [
									{
										"tag": "@function",
										"content": [
											{
												"kind": "text",
												"text": "pxToRem"
											}
										]
									},
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Utility function that converts pixel values to rem units based on a base font size.\nThis ensures consistent scaling across different browser font size settings and devices."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The converted value in rem units"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Basic usage with default base font size (16px)\nconst spacing = pxToRem(32); // returns \"2rem\"\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// With custom base font size\nconst fontSize = pxToRem(18, 18); // returns \"1rem\"\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Usage in styled components\nconst StyledComponent = styled('div')(({ theme }) => ({\n  padding: pxToRem(16),\n  fontSize: pxToRem(14),\n}));\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/style/pxToRem.ts",
									"line": 35,
									"character": 23,
									"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/pxToRem.ts#L35"
								}
							],
							"parameters": [
								{
									"id": 80,
									"name": "px",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The pixel value to convert"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 81,
									"name": "baseFontSize",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Base font size (in pixels) for calculation. Defaults to 16px (browser default)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						78
					]
				}
			],
			"sources": [
				{
					"fileName": "src/style/pxToRem.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/pxToRem.ts#L1"
				}
			]
		},
		{
			"id": 82,
			"name": "style/scrollToTop",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@file",
						"content": [
							{
								"kind": "text",
								"text": "Scroll-to-top components"
							}
						]
					},
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Customized floating action button and icon for scroll-to-top functionality\nwith smooth animations and responsive behavior."
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Munir Mardinli <munir@mardinli.de>"
							}
						]
					},
					{
						"tag": "@date",
						"content": [
							{
								"kind": "text",
								"text": "2025-06-20"
							}
						]
					},
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "1.0.0"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 87,
					"name": "StykedKeyboardArrowUp",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled keyboard arrow-up icon"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StykedKeyboardArrowUp"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A customized arrow-up icon with:\n- Smooth hover animations\n- Decorative pseudo-elements\n- Color transitions\n- Inherited sizing"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI Icon props"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<StykedKeyboardArrowUp\n  fontSize=\"large\"\n  color=\"inherit\"\n/>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/scrollToTop.ts",
							"line": 88,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/scrollToTop.ts#L88"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "SvgIcon/SvgIcon.d.ts",
											"qualifiedName": "SvgIconOwnProps"
										},
										"name": "SvgIconOwnProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "OverridableComponent/index.d.ts",
											"qualifiedName": "CommonProps"
										},
										"name": "CommonProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.SVGProps"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "SVGSVGElement"
														},
														"name": "SVGSVGElement",
														"package": "typescript"
													}
												],
												"name": "SVGProps",
												"package": "@types/react",
												"qualifiedName": "React.SVGProps"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "className"
													},
													{
														"type": "literal",
														"value": "style"
													},
													{
														"type": "literal",
														"value": "classes"
													},
													{
														"type": "literal",
														"value": "children"
													},
													{
														"type": "literal",
														"value": "sx"
													},
													{
														"type": "literal",
														"value": "color"
													},
													{
														"type": "literal",
														"value": "fontSize"
													},
													{
														"type": "literal",
														"value": "shapeRendering"
													},
													{
														"type": "literal",
														"value": "htmlColor"
													},
													{
														"type": "literal",
														"value": "inheritViewBox"
													},
													{
														"type": "literal",
														"value": "titleAccess"
													},
													{
														"type": "literal",
														"value": "viewBox"
													}
												]
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "Icon/Icon.d.ts",
											"qualifiedName": "IconOwnProps"
										},
										"name": "IconOwnProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.DetailedHTMLProps"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "@types/react",
															"packagePath": "index.d.ts",
															"qualifiedName": "React.HTMLAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLSpanElement"
																},
																"name": "HTMLSpanElement",
																"package": "typescript"
															}
														],
														"name": "HTMLAttributes",
														"package": "@types/react",
														"qualifiedName": "React.HTMLAttributes"
													},
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLSpanElement"
														},
														"name": "HTMLSpanElement",
														"package": "typescript"
													}
												],
												"name": "DetailedHTMLProps",
												"package": "@types/react",
												"qualifiedName": "React.DetailedHTMLProps"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "className"
													},
													{
														"type": "literal",
														"value": "style"
													},
													{
														"type": "literal",
														"value": "classes"
													},
													{
														"type": "literal",
														"value": "children"
													},
													{
														"type": "literal",
														"value": "sx"
													},
													{
														"type": "literal",
														"value": "color"
													},
													{
														"type": "literal",
														"value": "fontSize"
													},
													{
														"type": "literal",
														"value": "baseClassName"
													}
												]
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 88,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/@mui/material/Icon/Icon.d.ts",
													"line": 59,
													"character": 197
												}
											]
										}
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 89,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 90,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 83,
					"name": "StyledScrollToTopFab",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled scroll-to-top floating action button"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledScrollToTopFab"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A customized FAB (Floating Action Button) for scrolling to the top of the page.\nFeatures include:\n- Fixed positioning at bottom-right\n- Smooth hover and focus animations\n- Responsive sizing\n- Theme-aware styling"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI Fab props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<StyledScrollToTopFab\n  onClick={scrollToTop}\n  aria-label=\"scroll back to top\"\n>\n  <StykedKeyboardArrowUp />\n</StyledScrollToTopFab>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/scrollToTop.ts",
							"line": 36,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/scrollToTop.ts#L36"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "Fab/Fab.d.ts",
											"qualifiedName": "FabOwnProps"
										},
										"name": "FabOwnProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "ButtonBase/ButtonBase.d.ts",
													"qualifiedName": "ButtonBaseOwnProps"
												},
												"name": "ButtonBaseOwnProps",
												"package": "@mui/material"
											},
											{
												"type": "literal",
												"value": "classes"
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "OverridableComponent/index.d.ts",
											"qualifiedName": "CommonProps"
										},
										"name": "CommonProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.DetailedHTMLProps"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "@types/react",
															"packagePath": "index.d.ts",
															"qualifiedName": "React.ButtonHTMLAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLButtonElement"
																},
																"name": "HTMLButtonElement",
																"package": "typescript"
															}
														],
														"name": "ButtonHTMLAttributes",
														"package": "@types/react",
														"qualifiedName": "React.ButtonHTMLAttributes"
													},
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLButtonElement"
														},
														"name": "HTMLButtonElement",
														"package": "typescript"
													}
												],
												"name": "DetailedHTMLProps",
												"package": "@types/react",
												"qualifiedName": "React.DetailedHTMLProps"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "className"
													},
													{
														"type": "literal",
														"value": "style"
													},
													{
														"type": "literal",
														"value": "classes"
													},
													{
														"type": "literal",
														"value": "action"
													},
													{
														"type": "literal",
														"value": "centerRipple"
													},
													{
														"type": "literal",
														"value": "children"
													},
													{
														"type": "literal",
														"value": "disabled"
													},
													{
														"type": "literal",
														"value": "disableRipple"
													},
													{
														"type": "literal",
														"value": "disableTouchRipple"
													},
													{
														"type": "literal",
														"value": "focusRipple"
													},
													{
														"type": "literal",
														"value": "focusVisibleClassName"
													},
													{
														"type": "literal",
														"value": "LinkComponent"
													},
													{
														"type": "literal",
														"value": "onFocusVisible"
													},
													{
														"type": "literal",
														"value": "sx"
													},
													{
														"type": "literal",
														"value": "tabIndex"
													},
													{
														"type": "literal",
														"value": "TouchRippleProps"
													},
													{
														"type": "literal",
														"value": "touchRippleRef"
													},
													{
														"type": "literal",
														"value": "href"
													},
													{
														"type": "literal",
														"value": "color"
													},
													{
														"type": "literal",
														"value": "disableFocusRipple"
													},
													{
														"type": "literal",
														"value": "size"
													},
													{
														"type": "literal",
														"value": "variant"
													}
												]
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 84,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/@mui/material/Fab/Fab.d.ts",
													"line": 79,
													"character": 194
												}
											]
										}
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 85,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 86,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						87,
						83
					]
				}
			],
			"sources": [
				{
					"fileName": "src/style/scrollToTop.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/scrollToTop.ts#L1"
				}
			]
		},
		{
			"id": 91,
			"name": "style/search",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@file",
						"content": [
							{
								"kind": "text",
								"text": "Search components"
							}
						]
					},
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Customized search input components with responsive behavior,\ntheme-aware styling, and enhanced interactive states."
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Munir Mardinli <munir@mardinli.de>"
							}
						]
					},
					{
						"tag": "@date",
						"content": [
							{
								"kind": "text",
								"text": "2025-06-20"
							}
						]
					},
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "1.0.0"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 92,
					"name": "Search",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search container component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "Search"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Wrapper component for search elements with:\n- Responsive width behavior\n- Theme-aware background colors\n- Smooth hover transitions"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "React props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<Search>\n  <SearchIconWrapper>\n    <SearchIcon />\n  </SearchIconWrapper>\n  <StyledInputBase placeholder=\"Search...\" />\n</Search>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/search.ts",
							"line": 30,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/search.ts#L30"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@mui/system",
									"packagePath": "createStyled/createStyled.d.ts",
									"qualifiedName": "MUIStyledCommonProps"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "styles/createThemeNoVars.d.ts",
											"qualifiedName": "Theme"
										},
										"name": "Theme",
										"package": "@mui/material"
									}
								],
								"name": "MUIStyledCommonProps",
								"package": "@mui/system"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.DetailedHTMLProps"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@types/react",
											"packagePath": "index.d.ts",
											"qualifiedName": "React.HTMLAttributes"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "HTMLDivElement"
												},
												"name": "HTMLDivElement",
												"package": "typescript"
											}
										],
										"name": "HTMLAttributes",
										"package": "@types/react",
										"qualifiedName": "React.HTMLAttributes"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "HTMLDivElement"
										},
										"name": "HTMLDivElement",
										"package": "typescript"
									}
								],
								"name": "DetailedHTMLProps",
								"package": "@types/react",
								"qualifiedName": "React.DetailedHTMLProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 93,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 94,
					"name": "SearchIconWrapper",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search icon wrapper component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "SearchIconWrapper"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Container for search icon with:\n- Absolute positioning\n- Proper alignment\n- Non-interactive overlay (pointerEvents: none)"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "React props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<SearchIconWrapper>\n  <SearchIcon />\n</SearchIconWrapper>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/search.ts",
							"line": 60,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/search.ts#L60"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@mui/system",
									"packagePath": "createStyled/createStyled.d.ts",
									"qualifiedName": "MUIStyledCommonProps"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "styles/createThemeNoVars.d.ts",
											"qualifiedName": "Theme"
										},
										"name": "Theme",
										"package": "@mui/material"
									}
								],
								"name": "MUIStyledCommonProps",
								"package": "@mui/system"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.DetailedHTMLProps"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@types/react",
											"packagePath": "index.d.ts",
											"qualifiedName": "React.HTMLAttributes"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "HTMLDivElement"
												},
												"name": "HTMLDivElement",
												"package": "typescript"
											}
										],
										"name": "HTMLAttributes",
										"package": "@types/react",
										"qualifiedName": "React.HTMLAttributes"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "HTMLDivElement"
										},
										"name": "HTMLDivElement",
										"package": "typescript"
									}
								],
								"name": "DetailedHTMLProps",
								"package": "@types/react",
								"qualifiedName": "React.DetailedHTMLProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 95,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 99,
					"name": "SearchSelect",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search select component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "SearchSelect"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized select input for search filters with:\n- Transparent background\n- Borderless design\n- Responsive width\n- Focus state cleanup"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI Select props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<SearchSelect\n  value={filter}\n  onChange={handleFilterChange}\n  inputProps={{ 'aria-label': 'search filter' }}\n>\n  <MenuItem value=\"all\">All</MenuItem>\n  <MenuItem value=\"recent\">Recent</MenuItem>\n</SearchSelect>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/search.ts",
							"line": 122,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/search.ts#L122"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "unknown",
										"name": "SelectProps<unknown> & MUIStyledCommonProps<Theme>"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "Select/Select.d.ts",
											"qualifiedName": "SelectProps"
										},
										"name": "SelectProps",
										"package": "@mui/material"
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 100,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 101,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 96,
					"name": "StyledInputBase",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled input base component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledInputBase"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Customized input field with:\n- Icon padding adjustment\n- Responsive width transitions\n- Theme-aware text color"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "React props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<StyledInputBase\n  placeholder=\"Search...\"\n  inputProps={{ 'aria-label': 'search' }}\n/>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/search.ts",
							"line": 85,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/search.ts#L85"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "InputBase/InputBase.d.ts",
											"qualifiedName": "InputBaseProps"
										},
										"name": "InputBaseProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 97,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 98,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						92,
						94,
						99,
						96
					]
				}
			],
			"sources": [
				{
					"fileName": "src/style/search.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/search.ts#L1"
				}
			]
		},
		{
			"id": 102,
			"name": "style/snackbar",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@file",
						"content": [
							{
								"kind": "text",
								"text": "Styled snackbar notification components"
							}
						]
					},
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Customized Material-UI snackbar and alert components with enhanced styling,\ntheme-aware colors, and interactive effects for notification systems."
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Munir Mardinli <munir@mardinli.de>"
							}
						]
					},
					{
						"tag": "@date",
						"content": [
							{
								"kind": "text",
								"text": "2025-06-20"
							}
						]
					},
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "1.0.0"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 103,
					"name": "StyledSnackbar",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled snackbar component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledSnackbar"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A customized snackbar container with:\n- Theme-aware positioning and spacing\n- Smooth hover animations\n- Responsive shadow effects\n- Consistent z-index layering"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI Snackbar props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<StyledSnackbar\n  open={open}\n  autoHideDuration={6000}\n  onClose={handleClose}\n  anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n>\n  <StyledSnackbarAlert severity=\"success\">\n    Action completed successfully!\n  </StyledSnackbarAlert>\n</StyledSnackbar>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/snackbar.ts",
							"line": 42,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/snackbar.ts#L42"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "Snackbar/Snackbar.d.ts",
											"qualifiedName": "SnackbarProps"
										},
										"name": "SnackbarProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 104,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 105,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 106,
					"name": "StyledSnackbarAlert",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled snackbar alert component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledSnackbarAlert"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A customized alert component for snackbars with:\n- Complete variant styling (standard, filled, outlined)\n- Severity-based color schemes (error, warning, info, success)\n- Interactive hover effects\n- Consistent typography and spacing"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI Alert props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<StyledSnackbarAlert severity=\"error\" variant=\"filled\">\n  Error: Action failed to complete!\n</StyledSnackbarAlert>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/snackbar.ts",
							"line": 96,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/snackbar.ts#L96"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "Alert/Alert.d.ts",
											"qualifiedName": "AlertProps"
										},
										"name": "AlertProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 107,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 108,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						103,
						106
					]
				}
			],
			"sources": [
				{
					"fileName": "src/style/snackbar.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/snackbar.ts#L1"
				}
			]
		},
		{
			"id": 109,
			"name": "style/switchMode",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@file",
						"content": [
							{
								"kind": "text",
								"text": "Styled theme mode switch component"
							}
						]
					},
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "A customized theme toggle switch with dynamic icons that change\nbetween light and dark mode representations."
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Munir Mardinli <munir@mardinli.de>"
							}
						]
					},
					{
						"tag": "@date",
						"content": [
							{
								"kind": "text",
								"text": "2025-06-20"
							}
						]
					},
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "1.0.0"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 110,
					"name": "StyledSwitchMode",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled theme mode switch component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledSwitchMode"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A customized switch component for toggling between light and dark themes with:\n- Dynamic SVG icons representing sun (light) and moon (dark)\n- Theme-aware colors that adapt to current mode\n- Smooth transition animations\n- Responsive sizing"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "React props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<StyledSwitchMode\n  checked={darkMode}\n  onChange={toggleTheme}\n  inputProps={{ 'aria-label': 'toggle dark mode' }}\n/>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/switchMode.ts",
							"line": 32,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/switchMode.ts#L32"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "Switch/Switch.d.ts",
											"qualifiedName": "SwitchProps"
										},
										"name": "SwitchProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 111,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 112,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						110
					]
				}
			],
			"sources": [
				{
					"fileName": "src/style/switchMode.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/switchMode.ts#L1"
				}
			]
		},
		{
			"id": 113,
			"name": "style/textfield",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@file",
						"content": [
							{
								"kind": "text",
								"text": "Styled form input components"
							}
						]
					},
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Customized form input components including text fields, date pickers,\nand demo containers with consistent styling and theme integration."
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Munir Mardinli <munir@mardinli.de>"
							}
						]
					},
					{
						"tag": "@date",
						"content": [
							{
								"kind": "text",
								"text": "2025-06-20"
							}
						]
					},
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "1.0.0"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 121,
					"name": "StyledDateInput",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled date/time picker component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledDateInput"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A customized date picker with:\n- Clean borderless design\n- Theme-aware calendar styling\n- Custom scrollbar styling\n- Focus state management"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "React props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<StyledDateInput\n  label=\"Appointment Date\"\n  value={date}\n  onChange={handleDateChange}\n/>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/textfield.ts",
							"line": 141,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/textfield.ts#L141"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/x-date-pickers",
											"packagePath": "DateTimePicker/DateTimePicker.types.d.ts",
											"qualifiedName": "DateTimePickerProps"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "DateTimePickerProps",
										"package": "@mui/x-date-pickers"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@types/react",
											"packagePath": "index.d.ts",
											"qualifiedName": "React.RefAttributes"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "HTMLDivElement"
												},
												"name": "HTMLDivElement",
												"package": "typescript"
											}
										],
										"name": "RefAttributes",
										"package": "@types/react",
										"qualifiedName": "React.RefAttributes"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 122,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 123,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 124,
					"name": "StyledDemoContainer",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled demo container component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledDemoContainer"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A container for form demos with:\n- Consistent padding and spacing\n- Theme-aware background\n- Subtle shadow effect"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "React props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<StyledDemoContainer>\n  <StyledDateInput label=\"Demo Date\" />\n  <StyledTextField label=\"Demo Field\" />\n</StyledDemoContainer>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/textfield.ts",
							"line": 237,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/textfield.ts#L237"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 125,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 126,
													"name": "children",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/style/textfield.ts",
															"line": 238,
															"character": 2,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/textfield.ts#L238"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@types/react",
															"packagePath": "index.d.ts",
															"qualifiedName": "React.ReactNode"
														},
														"name": "ReactNode",
														"package": "@types/react",
														"qualifiedName": "React.ReactNode"
													}
												},
												{
													"id": 127,
													"name": "sx",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/style/textfield.ts",
															"line": 239,
															"character": 2,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/textfield.ts#L239"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "@mui/system",
															"packagePath": "styleFunctionSx/styleFunctionSx.d.ts",
															"qualifiedName": "SxProps"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "@mui/material",
																	"packagePath": "styles/createThemeNoVars.d.ts",
																	"qualifiedName": "Theme"
																},
																"name": "Theme",
																"package": "@mui/material"
															}
														],
														"name": "SxProps",
														"package": "@mui/system"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														126,
														127
													]
												}
											],
											"sources": [
												{
													"fileName": "src/style/textfield.ts",
													"line": 237,
													"character": 79,
													"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/textfield.ts#L237"
												}
											]
										}
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 128,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 129,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 114,
					"name": "StyledTextField",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled text field component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledTextField"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A customized text input field with:\n- Error state styling\n- Required field indication\n- Theme-aware colors and typography\n- Consistent hover and focus states"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "Component props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.error",
								"content": [
									{
										"kind": "text",
										"text": "Whether the field is in error state"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.required",
								"content": [
									{
										"kind": "text",
										"text": "Whether the field is required"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<StyledTextField\n  label=\"Email\"\n  required\n  error={!!errors.email}\n  helperText={errors.email?.message}\n/>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/textfield.ts",
							"line": 38,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/textfield.ts#L38"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 115,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/@mui/material/TextField/TextField.d.ts",
													"line": 336,
													"character": 76
												}
											]
										}
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"packageName": "@mui/material",
															"packagePath": "TextField/TextField.d.ts",
															"qualifiedName": "OutlinedTextFieldProps"
														},
														"name": "OutlinedTextFieldProps",
														"package": "@mui/material"
													},
													{
														"type": "reference",
														"target": {
															"packageName": "@mui/material",
															"packagePath": "TextField/TextField.d.ts",
															"qualifiedName": "FilledTextFieldProps"
														},
														"name": "FilledTextFieldProps",
														"package": "@mui/material"
													},
													{
														"type": "reference",
														"target": {
															"packageName": "@mui/material",
															"packagePath": "TextField/TextField.d.ts",
															"qualifiedName": "StandardTextFieldProps"
														},
														"name": "StandardTextFieldProps",
														"package": "@mui/material"
													}
												]
											},
											{
												"type": "literal",
												"value": "variant"
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 116,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 117,
													"name": "error",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/style/textfield.ts",
															"line": 40,
															"character": 5,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/textfield.ts#L40"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 118,
													"name": "required",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/style/textfield.ts",
															"line": 40,
															"character": 22,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/textfield.ts#L40"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														117,
														118
													]
												}
											],
											"sources": [
												{
													"fileName": "src/style/textfield.ts",
													"line": 40,
													"character": 3,
													"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/textfield.ts#L40"
												}
											]
										}
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 119,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 120,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						121,
						124,
						114
					]
				}
			],
			"sources": [
				{
					"fileName": "src/style/textfield.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/textfield.ts#L1"
				}
			]
		},
		{
			"id": 130,
			"name": "style/tooltip",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@file",
						"content": [
							{
								"kind": "text",
								"text": "Styled tooltip component"
							}
						]
					},
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "A customized Material-UI tooltip with enhanced styling,\nconsistent spacing, and theme-aware colors."
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Munir Mardinli <munir@mardinli.de>"
							}
						]
					},
					{
						"tag": "@date",
						"content": [
							{
								"kind": "text",
								"text": "2025-06-20"
							}
						]
					},
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "1.0.0"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 131,
					"name": "StyledTooltip",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled tooltip component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledTooltip"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A customized tooltip with:\n- Theme-aware dark background and white text\n- Consistent spacing and typography\n- Shadow effects for depth\n- Proper z-index layering\n- Responsive touch targets\n- Arrow styling for all placements"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI Tooltip props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<StyledTooltip title=\"Click to save\" placement=\"top\" arrow>\n  <Button>Save</Button>\n</StyledTooltip>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/tooltip.ts",
							"line": 32,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/tooltip.ts#L32"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "Tooltip/Tooltip.d.ts",
											"qualifiedName": "TooltipProps"
										},
										"name": "TooltipProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 132,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 133,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						131
					]
				}
			],
			"sources": [
				{
					"fileName": "src/style/tooltip.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/tooltip.ts#L1"
				}
			]
		},
		{
			"id": 134,
			"name": "style/typography",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@file",
						"content": [
							{
								"kind": "text",
								"text": "Styled typography components"
							}
						]
					},
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Customized typography components with responsive behavior,\ntheme-aware styling, and interactive effects for text elements."
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Munir Mardinli <munir@mardinli.de>"
							}
						]
					},
					{
						"tag": "@date",
						"content": [
							{
								"kind": "text",
								"text": "2025-06-20"
							}
						]
					},
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "1.0.0"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 135,
					"name": "StyledTypography",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Base styled typography component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledTypography"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A versatile typography component with:\n- Level-based heading styles (h1-h6)\n- Text truncation with ellipsis\n- Theme-aware colors\n- Responsive text sizing\n- Interactive hover state"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "Component props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.level",
								"content": [
									{
										"kind": "text",
										"text": "Heading level style"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<StyledTypography level=\"h1\" variant=\"h1\">\n  Main Heading\n</StyledTypography>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/typography.ts",
							"line": 36,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/typography.ts#L36"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "Typography/Typography.d.ts",
											"qualifiedName": "TypographyOwnProps"
										},
										"name": "TypographyOwnProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "OverridableComponent/index.d.ts",
											"qualifiedName": "CommonProps"
										},
										"name": "CommonProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.DetailedHTMLProps"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "@types/react",
															"packagePath": "index.d.ts",
															"qualifiedName": "React.HTMLAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLSpanElement"
																},
																"name": "HTMLSpanElement",
																"package": "typescript"
															}
														],
														"name": "HTMLAttributes",
														"package": "@types/react",
														"qualifiedName": "React.HTMLAttributes"
													},
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLSpanElement"
														},
														"name": "HTMLSpanElement",
														"package": "typescript"
													}
												],
												"name": "DetailedHTMLProps",
												"package": "@types/react",
												"qualifiedName": "React.DetailedHTMLProps"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "className"
													},
													{
														"type": "literal",
														"value": "style"
													},
													{
														"type": "literal",
														"value": "classes"
													},
													{
														"type": "literal",
														"value": "children"
													},
													{
														"type": "literal",
														"value": "sx"
													},
													{
														"type": "literal",
														"value": "p"
													},
													{
														"type": "literal",
														"value": "color"
													},
													{
														"type": "literal",
														"value": "border"
													},
													{
														"type": "literal",
														"value": "boxShadow"
													},
													{
														"type": "literal",
														"value": "fontWeight"
													},
													{
														"type": "literal",
														"value": "zIndex"
													},
													{
														"type": "literal",
														"value": "alignContent"
													},
													{
														"type": "literal",
														"value": "alignItems"
													},
													{
														"type": "literal",
														"value": "alignSelf"
													},
													{
														"type": "literal",
														"value": "bottom"
													},
													{
														"type": "literal",
														"value": "boxSizing"
													},
													{
														"type": "literal",
														"value": "columnGap"
													},
													{
														"type": "literal",
														"value": "display"
													},
													{
														"type": "literal",
														"value": "flexBasis"
													},
													{
														"type": "literal",
														"value": "flexDirection"
													},
													{
														"type": "literal",
														"value": "flexGrow"
													},
													{
														"type": "literal",
														"value": "flexShrink"
													},
													{
														"type": "literal",
														"value": "flexWrap"
													},
													{
														"type": "literal",
														"value": "fontFamily"
													},
													{
														"type": "literal",
														"value": "fontSize"
													},
													{
														"type": "literal",
														"value": "fontStyle"
													},
													{
														"type": "literal",
														"value": "gridAutoColumns"
													},
													{
														"type": "literal",
														"value": "gridAutoFlow"
													},
													{
														"type": "literal",
														"value": "gridAutoRows"
													},
													{
														"type": "literal",
														"value": "gridTemplateAreas"
													},
													{
														"type": "literal",
														"value": "gridTemplateColumns"
													},
													{
														"type": "literal",
														"value": "gridTemplateRows"
													},
													{
														"type": "literal",
														"value": "height"
													},
													{
														"type": "literal",
														"value": "justifyContent"
													},
													{
														"type": "literal",
														"value": "justifyItems"
													},
													{
														"type": "literal",
														"value": "justifySelf"
													},
													{
														"type": "literal",
														"value": "left"
													},
													{
														"type": "literal",
														"value": "letterSpacing"
													},
													{
														"type": "literal",
														"value": "lineHeight"
													},
													{
														"type": "literal",
														"value": "marginBlockEnd"
													},
													{
														"type": "literal",
														"value": "marginBlockStart"
													},
													{
														"type": "literal",
														"value": "marginBottom"
													},
													{
														"type": "literal",
														"value": "marginInlineEnd"
													},
													{
														"type": "literal",
														"value": "marginInlineStart"
													},
													{
														"type": "literal",
														"value": "marginLeft"
													},
													{
														"type": "literal",
														"value": "marginRight"
													},
													{
														"type": "literal",
														"value": "marginTop"
													},
													{
														"type": "literal",
														"value": "maxHeight"
													},
													{
														"type": "literal",
														"value": "maxWidth"
													},
													{
														"type": "literal",
														"value": "minHeight"
													},
													{
														"type": "literal",
														"value": "minWidth"
													},
													{
														"type": "literal",
														"value": "order"
													},
													{
														"type": "literal",
														"value": "paddingBlockEnd"
													},
													{
														"type": "literal",
														"value": "paddingBlockStart"
													},
													{
														"type": "literal",
														"value": "paddingBottom"
													},
													{
														"type": "literal",
														"value": "paddingInlineEnd"
													},
													{
														"type": "literal",
														"value": "paddingInlineStart"
													},
													{
														"type": "literal",
														"value": "paddingLeft"
													},
													{
														"type": "literal",
														"value": "paddingRight"
													},
													{
														"type": "literal",
														"value": "paddingTop"
													},
													{
														"type": "literal",
														"value": "position"
													},
													{
														"type": "literal",
														"value": "right"
													},
													{
														"type": "literal",
														"value": "rowGap"
													},
													{
														"type": "literal",
														"value": "textAlign"
													},
													{
														"type": "literal",
														"value": "textOverflow"
													},
													{
														"type": "literal",
														"value": "textTransform"
													},
													{
														"type": "literal",
														"value": "top"
													},
													{
														"type": "literal",
														"value": "visibility"
													},
													{
														"type": "literal",
														"value": "whiteSpace"
													},
													{
														"type": "literal",
														"value": "width"
													},
													{
														"type": "literal",
														"value": "borderBottom"
													},
													{
														"type": "literal",
														"value": "borderColor"
													},
													{
														"type": "literal",
														"value": "borderLeft"
													},
													{
														"type": "literal",
														"value": "borderRadius"
													},
													{
														"type": "literal",
														"value": "borderRight"
													},
													{
														"type": "literal",
														"value": "borderTop"
													},
													{
														"type": "literal",
														"value": "flex"
													},
													{
														"type": "literal",
														"value": "gap"
													},
													{
														"type": "literal",
														"value": "gridArea"
													},
													{
														"type": "literal",
														"value": "gridColumn"
													},
													{
														"type": "literal",
														"value": "gridRow"
													},
													{
														"type": "literal",
														"value": "margin"
													},
													{
														"type": "literal",
														"value": "marginBlock"
													},
													{
														"type": "literal",
														"value": "marginInline"
													},
													{
														"type": "literal",
														"value": "overflow"
													},
													{
														"type": "literal",
														"value": "padding"
													},
													{
														"type": "literal",
														"value": "paddingBlock"
													},
													{
														"type": "literal",
														"value": "paddingInline"
													},
													{
														"type": "literal",
														"value": "bgcolor"
													},
													{
														"type": "literal",
														"value": "m"
													},
													{
														"type": "literal",
														"value": "mt"
													},
													{
														"type": "literal",
														"value": "mr"
													},
													{
														"type": "literal",
														"value": "mb"
													},
													{
														"type": "literal",
														"value": "ml"
													},
													{
														"type": "literal",
														"value": "mx"
													},
													{
														"type": "literal",
														"value": "marginX"
													},
													{
														"type": "literal",
														"value": "my"
													},
													{
														"type": "literal",
														"value": "marginY"
													},
													{
														"type": "literal",
														"value": "pt"
													},
													{
														"type": "literal",
														"value": "pr"
													},
													{
														"type": "literal",
														"value": "pb"
													},
													{
														"type": "literal",
														"value": "pl"
													},
													{
														"type": "literal",
														"value": "px"
													},
													{
														"type": "literal",
														"value": "paddingX"
													},
													{
														"type": "literal",
														"value": "py"
													},
													{
														"type": "literal",
														"value": "paddingY"
													},
													{
														"type": "literal",
														"value": "typography"
													},
													{
														"type": "literal",
														"value": "displayPrint"
													},
													{
														"type": "literal",
														"value": "variant"
													},
													{
														"type": "literal",
														"value": "align"
													},
													{
														"type": "literal",
														"value": "gutterBottom"
													},
													{
														"type": "literal",
														"value": "noWrap"
													},
													{
														"type": "literal",
														"value": "paragraph"
													},
													{
														"type": "literal",
														"value": "variantMapping"
													}
												]
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 136,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/@mui/material/Typography/Typography.d.ts",
													"line": 96,
													"character": 215
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 137,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 138,
													"name": "level",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/style/typography.ts",
															"line": 37,
															"character": 21,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/typography.ts#L37"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "h1"
															},
															{
																"type": "literal",
																"value": "h2"
															},
															{
																"type": "literal",
																"value": "h3"
															},
															{
																"type": "literal",
																"value": "h4"
															},
															{
																"type": "literal",
																"value": "h5"
															},
															{
																"type": "literal",
																"value": "h6"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														138
													]
												}
											],
											"sources": [
												{
													"fileName": "src/style/typography.ts",
													"line": 37,
													"character": 19,
													"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/typography.ts#L37"
												}
											]
										}
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 139,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 140,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 141,
					"name": "StyledTypographyCaption",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled caption typography component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledTypographyCaption"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A prominent caption with:\n- Gradient text effect\n- Color variants (primary/white)\n- Bold weight\n- Center alignment\n- Responsive text wrapping"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "Component props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.level",
								"content": [
									{
										"kind": "text",
										"text": "Heading level style"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.color",
								"content": [
									{
										"kind": "text",
										"text": "Text color variant"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<StyledTypographyCaption color=\"primary\">\n  Featured Content\n</StyledTypographyCaption>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/typography.ts",
							"line": 77,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/typography.ts#L77"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "Typography/Typography.d.ts",
											"qualifiedName": "TypographyOwnProps"
										},
										"name": "TypographyOwnProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "OverridableComponent/index.d.ts",
											"qualifiedName": "CommonProps"
										},
										"name": "CommonProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.DetailedHTMLProps"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "@types/react",
															"packagePath": "index.d.ts",
															"qualifiedName": "React.HTMLAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLSpanElement"
																},
																"name": "HTMLSpanElement",
																"package": "typescript"
															}
														],
														"name": "HTMLAttributes",
														"package": "@types/react",
														"qualifiedName": "React.HTMLAttributes"
													},
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLSpanElement"
														},
														"name": "HTMLSpanElement",
														"package": "typescript"
													}
												],
												"name": "DetailedHTMLProps",
												"package": "@types/react",
												"qualifiedName": "React.DetailedHTMLProps"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "className"
													},
													{
														"type": "literal",
														"value": "style"
													},
													{
														"type": "literal",
														"value": "classes"
													},
													{
														"type": "literal",
														"value": "children"
													},
													{
														"type": "literal",
														"value": "sx"
													},
													{
														"type": "literal",
														"value": "p"
													},
													{
														"type": "literal",
														"value": "color"
													},
													{
														"type": "literal",
														"value": "border"
													},
													{
														"type": "literal",
														"value": "boxShadow"
													},
													{
														"type": "literal",
														"value": "fontWeight"
													},
													{
														"type": "literal",
														"value": "zIndex"
													},
													{
														"type": "literal",
														"value": "alignContent"
													},
													{
														"type": "literal",
														"value": "alignItems"
													},
													{
														"type": "literal",
														"value": "alignSelf"
													},
													{
														"type": "literal",
														"value": "bottom"
													},
													{
														"type": "literal",
														"value": "boxSizing"
													},
													{
														"type": "literal",
														"value": "columnGap"
													},
													{
														"type": "literal",
														"value": "display"
													},
													{
														"type": "literal",
														"value": "flexBasis"
													},
													{
														"type": "literal",
														"value": "flexDirection"
													},
													{
														"type": "literal",
														"value": "flexGrow"
													},
													{
														"type": "literal",
														"value": "flexShrink"
													},
													{
														"type": "literal",
														"value": "flexWrap"
													},
													{
														"type": "literal",
														"value": "fontFamily"
													},
													{
														"type": "literal",
														"value": "fontSize"
													},
													{
														"type": "literal",
														"value": "fontStyle"
													},
													{
														"type": "literal",
														"value": "gridAutoColumns"
													},
													{
														"type": "literal",
														"value": "gridAutoFlow"
													},
													{
														"type": "literal",
														"value": "gridAutoRows"
													},
													{
														"type": "literal",
														"value": "gridTemplateAreas"
													},
													{
														"type": "literal",
														"value": "gridTemplateColumns"
													},
													{
														"type": "literal",
														"value": "gridTemplateRows"
													},
													{
														"type": "literal",
														"value": "height"
													},
													{
														"type": "literal",
														"value": "justifyContent"
													},
													{
														"type": "literal",
														"value": "justifyItems"
													},
													{
														"type": "literal",
														"value": "justifySelf"
													},
													{
														"type": "literal",
														"value": "left"
													},
													{
														"type": "literal",
														"value": "letterSpacing"
													},
													{
														"type": "literal",
														"value": "lineHeight"
													},
													{
														"type": "literal",
														"value": "marginBlockEnd"
													},
													{
														"type": "literal",
														"value": "marginBlockStart"
													},
													{
														"type": "literal",
														"value": "marginBottom"
													},
													{
														"type": "literal",
														"value": "marginInlineEnd"
													},
													{
														"type": "literal",
														"value": "marginInlineStart"
													},
													{
														"type": "literal",
														"value": "marginLeft"
													},
													{
														"type": "literal",
														"value": "marginRight"
													},
													{
														"type": "literal",
														"value": "marginTop"
													},
													{
														"type": "literal",
														"value": "maxHeight"
													},
													{
														"type": "literal",
														"value": "maxWidth"
													},
													{
														"type": "literal",
														"value": "minHeight"
													},
													{
														"type": "literal",
														"value": "minWidth"
													},
													{
														"type": "literal",
														"value": "order"
													},
													{
														"type": "literal",
														"value": "paddingBlockEnd"
													},
													{
														"type": "literal",
														"value": "paddingBlockStart"
													},
													{
														"type": "literal",
														"value": "paddingBottom"
													},
													{
														"type": "literal",
														"value": "paddingInlineEnd"
													},
													{
														"type": "literal",
														"value": "paddingInlineStart"
													},
													{
														"type": "literal",
														"value": "paddingLeft"
													},
													{
														"type": "literal",
														"value": "paddingRight"
													},
													{
														"type": "literal",
														"value": "paddingTop"
													},
													{
														"type": "literal",
														"value": "position"
													},
													{
														"type": "literal",
														"value": "right"
													},
													{
														"type": "literal",
														"value": "rowGap"
													},
													{
														"type": "literal",
														"value": "textAlign"
													},
													{
														"type": "literal",
														"value": "textOverflow"
													},
													{
														"type": "literal",
														"value": "textTransform"
													},
													{
														"type": "literal",
														"value": "top"
													},
													{
														"type": "literal",
														"value": "visibility"
													},
													{
														"type": "literal",
														"value": "whiteSpace"
													},
													{
														"type": "literal",
														"value": "width"
													},
													{
														"type": "literal",
														"value": "borderBottom"
													},
													{
														"type": "literal",
														"value": "borderColor"
													},
													{
														"type": "literal",
														"value": "borderLeft"
													},
													{
														"type": "literal",
														"value": "borderRadius"
													},
													{
														"type": "literal",
														"value": "borderRight"
													},
													{
														"type": "literal",
														"value": "borderTop"
													},
													{
														"type": "literal",
														"value": "flex"
													},
													{
														"type": "literal",
														"value": "gap"
													},
													{
														"type": "literal",
														"value": "gridArea"
													},
													{
														"type": "literal",
														"value": "gridColumn"
													},
													{
														"type": "literal",
														"value": "gridRow"
													},
													{
														"type": "literal",
														"value": "margin"
													},
													{
														"type": "literal",
														"value": "marginBlock"
													},
													{
														"type": "literal",
														"value": "marginInline"
													},
													{
														"type": "literal",
														"value": "overflow"
													},
													{
														"type": "literal",
														"value": "padding"
													},
													{
														"type": "literal",
														"value": "paddingBlock"
													},
													{
														"type": "literal",
														"value": "paddingInline"
													},
													{
														"type": "literal",
														"value": "bgcolor"
													},
													{
														"type": "literal",
														"value": "m"
													},
													{
														"type": "literal",
														"value": "mt"
													},
													{
														"type": "literal",
														"value": "mr"
													},
													{
														"type": "literal",
														"value": "mb"
													},
													{
														"type": "literal",
														"value": "ml"
													},
													{
														"type": "literal",
														"value": "mx"
													},
													{
														"type": "literal",
														"value": "marginX"
													},
													{
														"type": "literal",
														"value": "my"
													},
													{
														"type": "literal",
														"value": "marginY"
													},
													{
														"type": "literal",
														"value": "pt"
													},
													{
														"type": "literal",
														"value": "pr"
													},
													{
														"type": "literal",
														"value": "pb"
													},
													{
														"type": "literal",
														"value": "pl"
													},
													{
														"type": "literal",
														"value": "px"
													},
													{
														"type": "literal",
														"value": "paddingX"
													},
													{
														"type": "literal",
														"value": "py"
													},
													{
														"type": "literal",
														"value": "paddingY"
													},
													{
														"type": "literal",
														"value": "typography"
													},
													{
														"type": "literal",
														"value": "displayPrint"
													},
													{
														"type": "literal",
														"value": "variant"
													},
													{
														"type": "literal",
														"value": "align"
													},
													{
														"type": "literal",
														"value": "gutterBottom"
													},
													{
														"type": "literal",
														"value": "noWrap"
													},
													{
														"type": "literal",
														"value": "paragraph"
													},
													{
														"type": "literal",
														"value": "variantMapping"
													}
												]
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 142,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/@mui/material/Typography/Typography.d.ts",
													"line": 96,
													"character": 215
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 143,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 145,
													"name": "color",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/style/typography.ts",
															"line": 82,
															"character": 2,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/typography.ts#L82"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "white"
															},
															{
																"type": "literal",
																"value": "primary"
															}
														]
													}
												},
												{
													"id": 144,
													"name": "level",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/style/typography.ts",
															"line": 81,
															"character": 2,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/typography.ts#L81"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "h1"
															},
															{
																"type": "literal",
																"value": "h2"
															},
															{
																"type": "literal",
																"value": "h3"
															},
															{
																"type": "literal",
																"value": "h4"
															},
															{
																"type": "literal",
																"value": "h5"
															},
															{
																"type": "literal",
																"value": "h6"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														145,
														144
													]
												}
											],
											"sources": [
												{
													"fileName": "src/style/typography.ts",
													"line": 80,
													"character": 19,
													"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/typography.ts#L80"
												}
											]
										}
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 146,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 147,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 148,
					"name": "StyledTypographySubcaption",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Styled subcaption typography component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "StyledTypographySubcaption"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A secondary caption with:\n- Custom color options\n- Responsive sizing\n- Text truncation\n- Disabled text styling"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props",
								"content": [
									{
										"kind": "text",
										"text": "Component props"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.level",
								"content": [
									{
										"kind": "text",
										"text": "Heading level style"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.color",
								"content": [
									{
										"kind": "text",
										"text": "Custom text color (defaults to disabled color)"
									}
								]
							},
							{
								"tag": "@param",
								"name": "props.theme",
								"content": [
									{
										"kind": "text",
										"text": "Material-UI theme object"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<StyledTypographySubcaption color=\"primary\">\n  Supporting text\n</StyledTypographySubcaption>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/typography.ts",
							"line": 157,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/typography.ts#L157"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "Typography/Typography.d.ts",
											"qualifiedName": "TypographyOwnProps"
										},
										"name": "TypographyOwnProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "OverridableComponent/index.d.ts",
											"qualifiedName": "CommonProps"
										},
										"name": "CommonProps",
										"package": "@mui/material"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@types/react",
													"packagePath": "index.d.ts",
													"qualifiedName": "React.DetailedHTMLProps"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "@types/react",
															"packagePath": "index.d.ts",
															"qualifiedName": "React.HTMLAttributes"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.dom.d.ts",
																	"qualifiedName": "HTMLSpanElement"
																},
																"name": "HTMLSpanElement",
																"package": "typescript"
															}
														],
														"name": "HTMLAttributes",
														"package": "@types/react",
														"qualifiedName": "React.HTMLAttributes"
													},
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLSpanElement"
														},
														"name": "HTMLSpanElement",
														"package": "typescript"
													}
												],
												"name": "DetailedHTMLProps",
												"package": "@types/react",
												"qualifiedName": "React.DetailedHTMLProps"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "className"
													},
													{
														"type": "literal",
														"value": "style"
													},
													{
														"type": "literal",
														"value": "classes"
													},
													{
														"type": "literal",
														"value": "children"
													},
													{
														"type": "literal",
														"value": "sx"
													},
													{
														"type": "literal",
														"value": "p"
													},
													{
														"type": "literal",
														"value": "color"
													},
													{
														"type": "literal",
														"value": "border"
													},
													{
														"type": "literal",
														"value": "boxShadow"
													},
													{
														"type": "literal",
														"value": "fontWeight"
													},
													{
														"type": "literal",
														"value": "zIndex"
													},
													{
														"type": "literal",
														"value": "alignContent"
													},
													{
														"type": "literal",
														"value": "alignItems"
													},
													{
														"type": "literal",
														"value": "alignSelf"
													},
													{
														"type": "literal",
														"value": "bottom"
													},
													{
														"type": "literal",
														"value": "boxSizing"
													},
													{
														"type": "literal",
														"value": "columnGap"
													},
													{
														"type": "literal",
														"value": "display"
													},
													{
														"type": "literal",
														"value": "flexBasis"
													},
													{
														"type": "literal",
														"value": "flexDirection"
													},
													{
														"type": "literal",
														"value": "flexGrow"
													},
													{
														"type": "literal",
														"value": "flexShrink"
													},
													{
														"type": "literal",
														"value": "flexWrap"
													},
													{
														"type": "literal",
														"value": "fontFamily"
													},
													{
														"type": "literal",
														"value": "fontSize"
													},
													{
														"type": "literal",
														"value": "fontStyle"
													},
													{
														"type": "literal",
														"value": "gridAutoColumns"
													},
													{
														"type": "literal",
														"value": "gridAutoFlow"
													},
													{
														"type": "literal",
														"value": "gridAutoRows"
													},
													{
														"type": "literal",
														"value": "gridTemplateAreas"
													},
													{
														"type": "literal",
														"value": "gridTemplateColumns"
													},
													{
														"type": "literal",
														"value": "gridTemplateRows"
													},
													{
														"type": "literal",
														"value": "height"
													},
													{
														"type": "literal",
														"value": "justifyContent"
													},
													{
														"type": "literal",
														"value": "justifyItems"
													},
													{
														"type": "literal",
														"value": "justifySelf"
													},
													{
														"type": "literal",
														"value": "left"
													},
													{
														"type": "literal",
														"value": "letterSpacing"
													},
													{
														"type": "literal",
														"value": "lineHeight"
													},
													{
														"type": "literal",
														"value": "marginBlockEnd"
													},
													{
														"type": "literal",
														"value": "marginBlockStart"
													},
													{
														"type": "literal",
														"value": "marginBottom"
													},
													{
														"type": "literal",
														"value": "marginInlineEnd"
													},
													{
														"type": "literal",
														"value": "marginInlineStart"
													},
													{
														"type": "literal",
														"value": "marginLeft"
													},
													{
														"type": "literal",
														"value": "marginRight"
													},
													{
														"type": "literal",
														"value": "marginTop"
													},
													{
														"type": "literal",
														"value": "maxHeight"
													},
													{
														"type": "literal",
														"value": "maxWidth"
													},
													{
														"type": "literal",
														"value": "minHeight"
													},
													{
														"type": "literal",
														"value": "minWidth"
													},
													{
														"type": "literal",
														"value": "order"
													},
													{
														"type": "literal",
														"value": "paddingBlockEnd"
													},
													{
														"type": "literal",
														"value": "paddingBlockStart"
													},
													{
														"type": "literal",
														"value": "paddingBottom"
													},
													{
														"type": "literal",
														"value": "paddingInlineEnd"
													},
													{
														"type": "literal",
														"value": "paddingInlineStart"
													},
													{
														"type": "literal",
														"value": "paddingLeft"
													},
													{
														"type": "literal",
														"value": "paddingRight"
													},
													{
														"type": "literal",
														"value": "paddingTop"
													},
													{
														"type": "literal",
														"value": "position"
													},
													{
														"type": "literal",
														"value": "right"
													},
													{
														"type": "literal",
														"value": "rowGap"
													},
													{
														"type": "literal",
														"value": "textAlign"
													},
													{
														"type": "literal",
														"value": "textOverflow"
													},
													{
														"type": "literal",
														"value": "textTransform"
													},
													{
														"type": "literal",
														"value": "top"
													},
													{
														"type": "literal",
														"value": "visibility"
													},
													{
														"type": "literal",
														"value": "whiteSpace"
													},
													{
														"type": "literal",
														"value": "width"
													},
													{
														"type": "literal",
														"value": "borderBottom"
													},
													{
														"type": "literal",
														"value": "borderColor"
													},
													{
														"type": "literal",
														"value": "borderLeft"
													},
													{
														"type": "literal",
														"value": "borderRadius"
													},
													{
														"type": "literal",
														"value": "borderRight"
													},
													{
														"type": "literal",
														"value": "borderTop"
													},
													{
														"type": "literal",
														"value": "flex"
													},
													{
														"type": "literal",
														"value": "gap"
													},
													{
														"type": "literal",
														"value": "gridArea"
													},
													{
														"type": "literal",
														"value": "gridColumn"
													},
													{
														"type": "literal",
														"value": "gridRow"
													},
													{
														"type": "literal",
														"value": "margin"
													},
													{
														"type": "literal",
														"value": "marginBlock"
													},
													{
														"type": "literal",
														"value": "marginInline"
													},
													{
														"type": "literal",
														"value": "overflow"
													},
													{
														"type": "literal",
														"value": "padding"
													},
													{
														"type": "literal",
														"value": "paddingBlock"
													},
													{
														"type": "literal",
														"value": "paddingInline"
													},
													{
														"type": "literal",
														"value": "bgcolor"
													},
													{
														"type": "literal",
														"value": "m"
													},
													{
														"type": "literal",
														"value": "mt"
													},
													{
														"type": "literal",
														"value": "mr"
													},
													{
														"type": "literal",
														"value": "mb"
													},
													{
														"type": "literal",
														"value": "ml"
													},
													{
														"type": "literal",
														"value": "mx"
													},
													{
														"type": "literal",
														"value": "marginX"
													},
													{
														"type": "literal",
														"value": "my"
													},
													{
														"type": "literal",
														"value": "marginY"
													},
													{
														"type": "literal",
														"value": "pt"
													},
													{
														"type": "literal",
														"value": "pr"
													},
													{
														"type": "literal",
														"value": "pb"
													},
													{
														"type": "literal",
														"value": "pl"
													},
													{
														"type": "literal",
														"value": "px"
													},
													{
														"type": "literal",
														"value": "paddingX"
													},
													{
														"type": "literal",
														"value": "py"
													},
													{
														"type": "literal",
														"value": "paddingY"
													},
													{
														"type": "literal",
														"value": "typography"
													},
													{
														"type": "literal",
														"value": "displayPrint"
													},
													{
														"type": "literal",
														"value": "variant"
													},
													{
														"type": "literal",
														"value": "align"
													},
													{
														"type": "literal",
														"value": "gutterBottom"
													},
													{
														"type": "literal",
														"value": "noWrap"
													},
													{
														"type": "literal",
														"value": "paragraph"
													},
													{
														"type": "literal",
														"value": "variantMapping"
													}
												]
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/system",
											"packagePath": "createStyled/createStyled.d.ts",
											"qualifiedName": "MUIStyledCommonProps"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "@mui/material",
													"packagePath": "styles/createThemeNoVars.d.ts",
													"qualifiedName": "Theme"
												},
												"name": "Theme",
												"package": "@mui/material"
											}
										],
										"name": "MUIStyledCommonProps",
										"package": "@mui/system"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 149,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "node_modules/@mui/material/Typography/Typography.d.ts",
													"line": 96,
													"character": 215
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 150,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 152,
													"name": "color",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/style/typography.ts",
															"line": 160,
															"character": 2,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/typography.ts#L160"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 151,
													"name": "level",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/style/typography.ts",
															"line": 159,
															"character": 2,
															"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/typography.ts#L159"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "h1"
															},
															{
																"type": "literal",
																"value": "h2"
															},
															{
																"type": "literal",
																"value": "h3"
															},
															{
																"type": "literal",
																"value": "h4"
															},
															{
																"type": "literal",
																"value": "h5"
															},
															{
																"type": "literal",
																"value": "h6"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														152,
														151
													]
												}
											],
											"sources": [
												{
													"fileName": "src/style/typography.ts",
													"line": 158,
													"character": 19,
													"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/typography.ts#L158"
												}
											]
										}
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 153,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 154,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				},
				{
					"id": 155,
					"name": "TypographyContainer",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Typography container component"
							}
						],
						"blockTags": [
							{
								"tag": "@component",
								"content": [
									{
										"kind": "text",
										"text": "TypographyContainer"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A layout container for typography components with:\n- Flex column layout\n- Center alignment\n- Consistent text alignment"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n<TypographyContainer>\n  <StyledTypography level=\"h1\">Title</StyledTypography>\n  <StyledTypographyCaption>Subtitle</StyledTypographyCaption>\n</TypographyContainer>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/style/typography.ts",
							"line": 208,
							"character": 13,
							"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/typography.ts#L208"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@emotion/styled",
							"packagePath": "dist/declarations/src/types.d.ts",
							"qualifiedName": "StyledComponent"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "@mui/system",
									"packagePath": "createStyled/createStyled.d.ts",
									"qualifiedName": "MUIStyledCommonProps"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@mui/material",
											"packagePath": "styles/createThemeNoVars.d.ts",
											"qualifiedName": "Theme"
										},
										"name": "Theme",
										"package": "@mui/material"
									}
								],
								"name": "MUIStyledCommonProps",
								"package": "@mui/system"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.DetailedHTMLProps"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "@types/react",
											"packagePath": "index.d.ts",
											"qualifiedName": "React.HTMLAttributes"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "HTMLDivElement"
												},
												"name": "HTMLDivElement",
												"package": "typescript"
											}
										],
										"name": "HTMLAttributes",
										"package": "@types/react",
										"qualifiedName": "React.HTMLAttributes"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "HTMLDivElement"
										},
										"name": "HTMLDivElement",
										"package": "typescript"
									}
								],
								"name": "DetailedHTMLProps",
								"package": "@types/react",
								"qualifiedName": "React.DetailedHTMLProps"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 156,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "StyledComponent",
						"package": "@emotion/styled"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						135,
						141,
						148,
						155
					]
				}
			],
			"sources": [
				{
					"fileName": "src/style/typography.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/munirmardinli/react-styled-kit/blob/main/src/style/typography.ts#L1"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				1,
				2,
				11,
				17,
				71,
				77,
				82,
				91,
				102,
				109,
				113,
				130,
				134
			]
		}
	],
	"packageName": "@munirmardinli_org/react-styled-kit",
	"packageVersion": "4.0.4",
	"readme": [
		{
			"kind": "text",
			"text": "# 🎨 @munirmardinli_org/react-styled-kit\n\n[![MIT License](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE)\n[![GitHub Version](https://img.shields.io/github/package-json/v/munirmardinli/react-styled-kit?color=green&label=version)](https://github.com/munirmardinli/react-styled-kit)\n[![TypeScript](https://img.shields.io/badge/lang-typescript-3178C6.svg)](https://www.typescriptlang.org/)\n[![Docs](https://img.shields.io/badge/docs-typedoc-blueviolet.svg)](https://munirmardinli.github.io/react-styled-kit//)\n[![npm](https://img.shields.io/npm/v/@munirmardinli_org/react-styled-kit)](https://www.npmjs.com/package/@munirmardinli_org/react-styled-kit)\n[![Storybook](https://cdn.jsdelivr.net/gh/storybookjs/brand@main/badge/badge-storybook.svg)](https://munirmardinli.github.io/react-styled-kit/storybook)\n[![GitHub Issues](https://img.shields.io/github/issues/munirmardinli/react-styled-kit)](https://github.com/munirmardinli/react-styled-kit/issues)\n[![GitHub Stars](https://img.shields.io/github/stars/munirmardinli/react-styled-kit)](https://github.com/munirmardinli/react-styled-kit/stargazers)\n[![GitHub Forks](https://img.shields.io/github/forks/munirmardinli/react-styled-kit)](https://github.com/munirmardinli/react-styled-kit/network/members)\n\n# 🎨 "
		},
		{
			"kind": "code",
			"text": "`@munirmardinli_org/react-styled-kit`"
		},
		{
			"kind": "text",
			"text": " - Elegant React Component Styling Utilities\n\n> A sleek, scalable component styling toolkit for React, with enhanced Material-UI integration, powerful utilities, and elegant defaults - crafted by [Munir Mardinli](mailto:munir@mardinli.de).\n\n<a href=\"https://www.buymeacoffee.com/munirmardinli\" target=\"_blank\">\n  <img src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee&emoji=☕&slug=munirmardinli&button_colour=40DCA5&font_colour=ffffff&font_family=Cookie&outline_colour=000000&coffee_colour=FFDD00\" />\n</a>\n\n---\n\n## ✨ Key Features\n- ✅ Fully themed Material-UI component wrappers\n- 🧩 Composable & accessible React UI building blocks\n- 🎨 Unified design language across your app\n- 📐 pxToRem and other utility functions for scalable UIs\n- 🌒 Light & dark theme support out of the box\n- 📱 Responsive layouts with overlay management\n- ⚡ Plug-and-play - use what you need\n---\n\n## 📦 Installation\n\n"
		},
		{
			"kind": "code",
			"text": "```bash\nnpm install @munirmardinli_org/react-styled-kit\n# or\nyarn add @munirmardinli_org/react-styled-kit\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## 🚀 Quick Example\n\n"
		},
		{
			"kind": "code",
			"text": "```tsx\nimport {\n  StyledButton,\n  StyledCalendar,\n  Drawer,\n  AppBar,\n  Search,\n  pxToRem,\n} from \"@munirmardinli_org/react-styled-kit\";\n\nconst Example = () => (\n  <>\n    <AppBar />\n    <Drawer />\n    <Search />\n    <StyledButton>Click me</StyledButton>\n    <p style={{ fontSize: pxToRem(16) }}>This text uses rem units.</p>\n  </>\n);\n\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## 🧱 Components Overview\n\n| Component                                                                                          | Description                             |\n| -------------------------------------------------------------------------------------------------- | --------------------------------------- |\n| "
		},
		{
			"kind": "code",
			"text": "`StyledButton`"
		},
		{
			"kind": "text",
			"text": "                                                                                     | Button with unified styling             |\n| "
		},
		{
			"kind": "code",
			"text": "`StyledCalendar`"
		},
		{
			"kind": "text",
			"text": "                                                                                   | Custom calendar view                    |\n| "
		},
		{
			"kind": "code",
			"text": "`Drawer`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`AppBar`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`DrawerHeader`"
		},
		{
			"kind": "text",
			"text": "                                                                 | Layout navigation elements              |\n| "
		},
		{
			"kind": "code",
			"text": "`Search`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`SearchSelect`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`StyledInputBase`"
		},
		{
			"kind": "text",
			"text": "                                                        | Search and filter UI                    |\n| "
		},
		{
			"kind": "code",
			"text": "`StyledSnackbar`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`StyledSnackbarAlert`"
		},
		{
			"kind": "text",
			"text": "                                                            | Notification components                 |\n| "
		},
		{
			"kind": "code",
			"text": "`StyledTooltip`"
		},
		{
			"kind": "text",
			"text": "                                                                                    | Tooltip with custom design              |\n| "
		},
		{
			"kind": "code",
			"text": "`StyledDataGrid`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`StyledGridOverlay`"
		},
		{
			"kind": "text",
			"text": "                                                              | Advanced grid with overlays             |\n| "
		},
		{
			"kind": "code",
			"text": "`StyledTextField`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`StyledDateInput`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`StyledDemoContainer`"
		},
		{
			"kind": "text",
			"text": "                                        | Form inputs                             |\n| "
		},
		{
			"kind": "code",
			"text": "`StyledTypography`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`StyledTypographyCaption`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`StyledTypographySubcaption`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`TypographyContainer`"
		},
		{
			"kind": "text",
			"text": " | Typography utilities                    |\n| "
		},
		{
			"kind": "code",
			"text": "`StyledSwitchMode`"
		},
		{
			"kind": "text",
			"text": "                                                                                 | Theme switch toggle                     |\n| "
		},
		{
			"kind": "code",
			"text": "`StyledScrollToTopFab`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`StykedKeyboardArrowUp`"
		},
		{
			"kind": "text",
			"text": "                                                    | Floating action button to scroll to top |\n| "
		},
		{
			"kind": "code",
			"text": "`Logo`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`StyledMenuItem`"
		},
		{
			"kind": "text",
			"text": ", "
		},
		{
			"kind": "code",
			"text": "`StyledMenuIcon`"
		},
		{
			"kind": "text",
			"text": "                                                         | Branding and menu elements              |\n\n## 🧠 Utility Functions\n\n### "
		},
		{
			"kind": "code",
			"text": "`pxToRem(value: number): string`"
		},
		{
			"kind": "text",
			"text": "\n\nConverts a pixel value to a "
		},
		{
			"kind": "code",
			"text": "`rem`"
		},
		{
			"kind": "text",
			"text": " unit based on a base font size of "
		},
		{
			"kind": "code",
			"text": "`16px`"
		},
		{
			"kind": "text",
			"text": ".\n\n"
		},
		{
			"kind": "code",
			"text": "```ts\npxToRem(16); // '1rem'\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## 📁 Folder Structure\n\n"
		},
		{
			"kind": "code",
			"text": "```txt\n📦 style\n├── button.ts\n├── calendar.css\n├── calendar.ts\n├── drawer.ts\n├── grid.ts\n├── scrollToTop.ts\n├── search.ts\n├── snackbar.ts\n├── switchMode.ts\n├── textfield.ts\n├── tooltip.ts\n├── typography.ts\n└── pxToRem.ts\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## 👨‍🎨 Author\n\n👤 Munir Mardinli\n\n📧 [munir@mardinli.de](mailto:munir@mardinli.de)\n\n🌐 [mardinli.de](https://mardinli.de)\n\n## 🏷️ License\n\n**MIT License** © [Munir Mardinli](https://linktr.ee/munirmardinli)\n\n<details>\n<summary>Full License Text</summary>\n\n"
		},
		{
			"kind": "code",
			"text": "```text\nMIT License\n\nCopyright (c) 2025 Munir Mardinli\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n```"
		},
		{
			"kind": "text",
			"text": "\n</details>"
		}
	],
	"symbolIdMap": {
		"1": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": ""
		},
		"2": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/button.ts",
			"qualifiedName": ""
		},
		"3": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/button.ts",
			"qualifiedName": "StyledButton"
		},
		"4": {
			"packageName": "@mui/material",
			"packagePath": "Button/Button.d.ts",
			"qualifiedName": "__type"
		},
		"5": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"6": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"7": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/button.ts",
			"qualifiedName": "StyledCloseIcon"
		},
		"8": {
			"packageName": "@mui/material",
			"packagePath": "Button/Button.d.ts",
			"qualifiedName": "__type"
		},
		"9": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"10": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"11": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/calendar.ts",
			"qualifiedName": ""
		},
		"12": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/calendar.ts",
			"qualifiedName": "StyledCalendar"
		},
		"13": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"14": {
			"packageName": "@mui/styled-engine",
			"packagePath": "index.d.ts",
			"qualifiedName": "__type"
		},
		"15": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/calendar.ts",
			"qualifiedName": "RBCOverlay"
		},
		"16": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"17": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": ""
		},
		"18": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "drawerWidth"
		},
		"19": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "openedMixin"
		},
		"20": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "openedMixin"
		},
		"21": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "theme"
		},
		"22": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "closedMixin"
		},
		"23": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "closedMixin"
		},
		"24": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "theme"
		},
		"25": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "DrawerHeader"
		},
		"26": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"27": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "AppBar"
		},
		"28": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "__type"
		},
		"29": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "__type.open"
		},
		"30": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"31": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"32": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "Drawer"
		},
		"33": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"34": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"35": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "StyledListItemText"
		},
		"36": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "__type"
		},
		"37": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "__type.open"
		},
		"38": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "__type.pathname"
		},
		"39": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "__type.path"
		},
		"40": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"41": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"42": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "StyledListItemIcon"
		},
		"43": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "__type"
		},
		"44": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "__type.open"
		},
		"45": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "__type.pathname"
		},
		"46": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "__type.path"
		},
		"47": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"48": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"49": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "StyledListItemButton"
		},
		"50": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "__type"
		},
		"51": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "__type.open"
		},
		"52": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "__type.pathname"
		},
		"53": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "__type.path"
		},
		"54": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"55": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"56": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "StyledMenuItem"
		},
		"57": {
			"packageName": "@mui/material",
			"packagePath": "MenuItem/MenuItem.d.ts",
			"qualifiedName": "__type"
		},
		"58": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "__type"
		},
		"59": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "__type.path"
		},
		"60": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "__type.languageSelected"
		},
		"61": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"62": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"63": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "Logo"
		},
		"64": {
			"packageName": "next",
			"packagePath": "dist/client/image-component.d.ts",
			"qualifiedName": "__type"
		},
		"65": {
			"packageName": "next",
			"packagePath": "dist/shared/lib/get-img-props.d.ts",
			"qualifiedName": "__type"
		},
		"66": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"67": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"68": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/drawer.ts",
			"qualifiedName": "StyledMenuIcon"
		},
		"69": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"70": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"71": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/grid.ts",
			"qualifiedName": ""
		},
		"72": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/grid.ts",
			"qualifiedName": "StyledDataGrid"
		},
		"73": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"74": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"75": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/grid.ts",
			"qualifiedName": "StyledGridOverlay"
		},
		"76": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"77": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/pxToRem.ts",
			"qualifiedName": ""
		},
		"78": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/pxToRem.ts",
			"qualifiedName": "pxToRem"
		},
		"79": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/pxToRem.ts",
			"qualifiedName": "pxToRem"
		},
		"80": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/pxToRem.ts",
			"qualifiedName": "px"
		},
		"81": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/pxToRem.ts",
			"qualifiedName": "baseFontSize"
		},
		"82": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/scrollToTop.ts",
			"qualifiedName": ""
		},
		"83": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/scrollToTop.ts",
			"qualifiedName": "StyledScrollToTopFab"
		},
		"84": {
			"packageName": "@mui/material",
			"packagePath": "Fab/Fab.d.ts",
			"qualifiedName": "__type"
		},
		"85": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"86": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"87": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/scrollToTop.ts",
			"qualifiedName": "StykedKeyboardArrowUp"
		},
		"88": {
			"packageName": "@mui/material",
			"packagePath": "Icon/Icon.d.ts",
			"qualifiedName": "__type"
		},
		"89": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"90": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"91": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/search.ts",
			"qualifiedName": ""
		},
		"92": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/search.ts",
			"qualifiedName": "Search"
		},
		"93": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"94": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/search.ts",
			"qualifiedName": "SearchIconWrapper"
		},
		"95": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"96": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/search.ts",
			"qualifiedName": "StyledInputBase"
		},
		"97": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"98": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"99": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/search.ts",
			"qualifiedName": "SearchSelect"
		},
		"100": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"101": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"102": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/snackbar.ts",
			"qualifiedName": ""
		},
		"103": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/snackbar.ts",
			"qualifiedName": "StyledSnackbar"
		},
		"104": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"105": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"106": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/snackbar.ts",
			"qualifiedName": "StyledSnackbarAlert"
		},
		"107": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"108": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"109": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/switchMode.ts",
			"qualifiedName": ""
		},
		"110": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/switchMode.ts",
			"qualifiedName": "StyledSwitchMode"
		},
		"111": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"112": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"113": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/textfield.ts",
			"qualifiedName": ""
		},
		"114": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/textfield.ts",
			"qualifiedName": "StyledTextField"
		},
		"115": {
			"packageName": "@mui/material",
			"packagePath": "TextField/TextField.d.ts",
			"qualifiedName": "__type"
		},
		"116": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/textfield.ts",
			"qualifiedName": "__type"
		},
		"117": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/textfield.ts",
			"qualifiedName": "__type.error"
		},
		"118": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/textfield.ts",
			"qualifiedName": "__type.required"
		},
		"119": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"120": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"121": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/textfield.ts",
			"qualifiedName": "StyledDateInput"
		},
		"122": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"123": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"124": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/textfield.ts",
			"qualifiedName": "StyledDemoContainer"
		},
		"125": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/textfield.ts",
			"qualifiedName": "__type"
		},
		"126": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/textfield.ts",
			"qualifiedName": "__type.children"
		},
		"127": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/textfield.ts",
			"qualifiedName": "__type.sx"
		},
		"128": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"129": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"130": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/tooltip.ts",
			"qualifiedName": ""
		},
		"131": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/tooltip.ts",
			"qualifiedName": "StyledTooltip"
		},
		"132": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"133": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"134": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/typography.ts",
			"qualifiedName": ""
		},
		"135": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/typography.ts",
			"qualifiedName": "StyledTypography"
		},
		"136": {
			"packageName": "@mui/material",
			"packagePath": "Typography/Typography.d.ts",
			"qualifiedName": "__type"
		},
		"137": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/typography.ts",
			"qualifiedName": "__type"
		},
		"138": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/typography.ts",
			"qualifiedName": "__type.level"
		},
		"139": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"140": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"141": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/typography.ts",
			"qualifiedName": "StyledTypographyCaption"
		},
		"142": {
			"packageName": "@mui/material",
			"packagePath": "Typography/Typography.d.ts",
			"qualifiedName": "__type"
		},
		"143": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/typography.ts",
			"qualifiedName": "__type"
		},
		"144": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/typography.ts",
			"qualifiedName": "__type.level"
		},
		"145": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/typography.ts",
			"qualifiedName": "__type.color"
		},
		"146": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"147": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"148": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/typography.ts",
			"qualifiedName": "StyledTypographySubcaption"
		},
		"149": {
			"packageName": "@mui/material",
			"packagePath": "Typography/Typography.d.ts",
			"qualifiedName": "__type"
		},
		"150": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/typography.ts",
			"qualifiedName": "__type"
		},
		"151": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/typography.ts",
			"qualifiedName": "__type.level"
		},
		"152": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/typography.ts",
			"qualifiedName": "__type.color"
		},
		"153": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"154": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"155": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/style/typography.ts",
			"qualifiedName": "TypographyContainer"
		},
		"156": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"157": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "pxToRem"
		},
		"158": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledButton"
		},
		"159": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledCloseIcon"
		},
		"160": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledCalendar"
		},
		"161": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "RBCOverlay"
		},
		"162": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "drawerWidth"
		},
		"163": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "AppBar"
		},
		"164": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "closedMixin"
		},
		"165": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "Drawer"
		},
		"166": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "DrawerHeader"
		},
		"167": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "openedMixin"
		},
		"168": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledListItemButton"
		},
		"169": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledListItemIcon"
		},
		"170": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledListItemText"
		},
		"171": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledMenuItem"
		},
		"172": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledMenuIcon"
		},
		"173": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "Logo"
		},
		"174": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledDataGrid"
		},
		"175": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledGridOverlay"
		},
		"176": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledScrollToTopFab"
		},
		"177": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StykedKeyboardArrowUp"
		},
		"178": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "SearchSelect"
		},
		"179": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "Search"
		},
		"180": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "SearchIconWrapper"
		},
		"181": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledInputBase"
		},
		"182": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledSnackbar"
		},
		"183": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledSnackbarAlert"
		},
		"184": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledSwitchMode"
		},
		"185": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledDateInput"
		},
		"186": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledDemoContainer"
		},
		"187": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledTextField"
		},
		"188": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledTooltip"
		},
		"189": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledTypographyCaption"
		},
		"190": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledTypography"
		},
		"191": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "TypographyContainer"
		},
		"192": {
			"packageName": "@munirmardinli_org/react-styled-kit",
			"packagePath": "src/index.ts",
			"qualifiedName": "StyledTypographySubcaption"
		}
	},
	"files": {
		"entries": {
			"1": "src/index.ts",
			"2": "src/style/button.ts",
			"3": "src/style/calendar.ts",
			"4": "src/style/drawer.ts",
			"5": "src/style/grid.ts",
			"6": "src/style/pxToRem.ts",
			"7": "src/style/scrollToTop.ts",
			"8": "src/style/search.ts",
			"9": "src/style/snackbar.ts",
			"10": "src/style/switchMode.ts",
			"11": "src/style/textfield.ts",
			"12": "src/style/tooltip.ts",
			"13": "src/style/typography.ts",
			"14": "README.md",
			"15": ""
		},
		"reflections": {
			"1": 1,
			"2": 2,
			"3": 11,
			"4": 17,
			"5": 71,
			"6": 77,
			"7": 82,
			"8": 91,
			"9": 102,
			"10": 109,
			"11": 113,
			"12": 130,
			"13": 134,
			"14": 0,
			"15": 0
		}
	}
}
